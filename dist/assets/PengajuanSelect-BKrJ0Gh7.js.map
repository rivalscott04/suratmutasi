{"version":3,"file":"PengajuanSelect-BKrJ0Gh7.js","sources":["../../src/components/JabatanSelectionModal.tsx","../../src/pages/PengajuanSelect.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Search, Users, FileText, ArrowRight, Loader2 } from 'lucide-react';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { apiGet } from '@/lib/api';\r\n\r\ninterface JobTypeConfig {\r\n  id: number;\r\n  jenis_jabatan: string;\r\n  min_dokumen: number;\r\n  max_dokumen: number;\r\n  required_files: string[];\r\n  is_active: boolean;\r\n}\r\n\r\ninterface JabatanSelectionModalProps {\r\n  open: boolean;\r\n  onOpenChange: (open: boolean) => void;\r\n  onJabatanSelected: (jabatan: JobTypeConfig) => void;\r\n}\r\n\r\nconst JabatanSelectionModal: React.FC<JabatanSelectionModalProps> = ({\r\n  open,\r\n  onOpenChange,\r\n  onJabatanSelected\r\n}) => {\r\n  const { token } = useAuth();\r\n  const [jobTypes, setJobTypes] = useState<JobTypeConfig[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedJabatan, setSelectedJabatan] = useState<JobTypeConfig | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      fetchJobTypes();\r\n    }\r\n  }, [open]);\r\n\r\n  const fetchJobTypes = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await apiGet('/api/job-type-configurations?active_only=true', token);\r\n      if (response.success) {\r\n        setJobTypes(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching job types:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredJobTypes = jobTypes.filter(job =>\r\n    job.jenis_jabatan.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleJabatanSelect = (jabatan: JobTypeConfig) => {\r\n    setSelectedJabatan(jabatan);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    if (selectedJabatan) {\r\n      onJabatanSelected(selectedJabatan);\r\n      onOpenChange(false);\r\n      setSelectedJabatan(null);\r\n      setSearchTerm('');\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onOpenChange(false);\r\n    setSelectedJabatan(null);\r\n    setSearchTerm('');\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center gap-2 text-xl\">\r\n            <Users className=\"h-5 w-5 text-green-600\" />\r\n            Pilih Jabatan untuk Pengajuan\r\n          </DialogTitle>\r\n          <p className=\"text-sm text-gray-600 mt-2\">\r\n            Pilih jenis jabatan yang akan diajukan. Setiap jabatan memiliki persyaratan dokumen yang berbeda.\r\n          </p>\r\n        </DialogHeader>\r\n\r\n        <div className=\"space-y-6\">\r\n          {/* Search Bar */}\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n            <Input\r\n              placeholder=\"Cari jabatan...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"pl-10\"\r\n            />\r\n          </div>\r\n\r\n          {/* Job Types Grid */}\r\n          {loading ? (\r\n            <div className=\"flex items-center justify-center py-12\">\r\n              <Loader2 className=\"h-8 w-8 animate-spin mr-2\" />\r\n              <span>Memuat data jabatan...</span>\r\n            </div>\r\n          ) : filteredJobTypes.length === 0 ? (\r\n            <div className=\"text-center py-12\">\r\n              <FileText className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n              <p className=\"text-gray-500\">\r\n                {searchTerm ? 'Tidak ada jabatan yang sesuai dengan pencarian' : 'Tidak ada jabatan yang tersedia'}\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {filteredJobTypes.map((job) => (\r\n                <Card\r\n                  key={job.id}\r\n                  className={`cursor-pointer transition-all duration-200 hover:shadow-md ${\r\n                    selectedJabatan?.id === job.id\r\n                      ? 'ring-2 ring-green-500 bg-green-50 border-green-200'\r\n                      : 'hover:border-green-300'\r\n                  }`}\r\n                  onClick={() => handleJabatanSelect(job)}\r\n                >\r\n                  <CardHeader className=\"pb-3\">\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <CardTitle className=\"text-lg font-semibold text-gray-800\">\r\n                        {job.jenis_jabatan}\r\n                      </CardTitle>\r\n                      <Badge \r\n                        variant=\"secondary\" \r\n                        className=\"bg-green-100 text-green-800 border-green-200\"\r\n                      >\r\n                        Aktif\r\n                      </Badge>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardContent className=\"pt-0\">\r\n                    <div className=\"space-y-3\">\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"text-sm text-gray-600\">Total Dokumen:</span>\r\n                        <span className=\"font-semibold text-green-600\">{job.max_dokumen}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"text-sm text-gray-600\">Min Dokumen:</span>\r\n                        <span className=\"text-sm text-gray-500\">{job.min_dokumen}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"text-sm text-gray-600\">Jenis File:</span>\r\n                        <span className=\"text-sm text-gray-500\">{job.required_files.length} jenis</span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {selectedJabatan?.id === job.id && (\r\n                      <div className=\"mt-3 pt-3 border-t border-green-200\">\r\n                        <div className=\"flex items-center text-green-600 text-sm font-medium\">\r\n                          <ArrowRight className=\"h-4 w-4 mr-1\" />\r\n                          Dipilih\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* Selection Summary */}\r\n          {selectedJabatan && (\r\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n              <h4 className=\"font-medium text-green-800 mb-2\">Jabatan yang Dipilih:</h4>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"font-semibold text-green-700\">{selectedJabatan.jenis_jabatan}</p>\r\n                  <p className=\"text-sm text-green-600\">\r\n                    {selectedJabatan.required_files.length} jenis dokumen diperlukan\r\n                  </p>\r\n                </div>\r\n                <Badge className=\"bg-green-600 text-white\">\r\n                  {selectedJabatan.max_dokumen} dokumen\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"flex justify-end gap-3 pt-4 border-t\">\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={handleCancel}\r\n              className=\"border-gray-300 text-gray-700 hover:bg-gray-50\"\r\n            >\r\n              Batal\r\n            </Button>\r\n            <Button\r\n              onClick={handleConfirm}\r\n              disabled={!selectedJabatan}\r\n              className=\"bg-green-600 hover:bg-green-700 text-white\"\r\n            >\r\n              Pilih Jabatan\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default JabatanSelectionModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\r\nimport { Search, Users, Send, Loader2, AlertCircle, ChevronLeft, ChevronRight, Briefcase, ArrowLeft } from 'lucide-react';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { apiGet, apiPost } from '@/lib/api';\r\nimport JabatanSelectionModal from '@/components/JabatanSelectionModal';\r\n\r\ninterface PegawaiData {\r\n  nip: string;\r\n  nama: string;\r\n  jabatan: string;\r\n  unit_kerja: string;\r\n  induk_unit: string;\r\n  total_surat: number;\r\n}\r\n\r\ninterface JobTypeConfig {\r\n  id: number;\r\n  jenis_jabatan: string;\r\n  min_dokumen: number;\r\n  max_dokumen: number;\r\n  required_files: string[];\r\n  is_active: boolean;\r\n}\r\n\r\nconst PengajuanSelect: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { user, token, isAuthenticated } = useAuth();\r\n  const [pegawaiData, setPegawaiData] = useState<Record<string, PegawaiData[]>>({});\r\n  const [selectedPegawai, setSelectedPegawai] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  \r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(5);\r\n\r\n  // Jabatan selection state\r\n  const [showJabatanModal, setShowJabatanModal] = useState(false);\r\n  const [selectedJabatan, setSelectedJabatan] = useState<JobTypeConfig | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n    // Tidak perlu fetch data pegawai di awal, tunggu sampai jabatan dipilih\r\n  }, [isAuthenticated, navigate]);\r\n\r\n\r\n\r\n  const handleJabatanSelected = (jabatan: JobTypeConfig) => {\r\n    setSelectedJabatan(jabatan);\r\n    // Setelah jabatan dipilih, fetch pegawai yang sesuai dengan jabatan tersebut\r\n    fetchPegawaiByJabatan(jabatan.id);\r\n  };\r\n\r\n  const fetchPegawaiByJabatan = async (jabatanId: number) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null); // Clear previous errors\r\n      \r\n      // Gunakan endpoint yang sudah ada\r\n      const response = await apiGet('/api/pengajuan/pegawai-grouped', token);\r\n      if (response.success) {\r\n        // Filter pegawai berdasarkan jabatan yang dipilih\r\n        const filteredData: Record<string, PegawaiData[]> = {};\r\n        \r\n        Object.entries(response.data).forEach(([key, pegawaiList]) => {\r\n          const filteredPegawai = (pegawaiList as PegawaiData[]).filter(pegawai => {\r\n            // Filter berdasarkan jabatan yang dipilih\r\n            // Untuk sementara, kita akan menampilkan semua pegawai yang memiliki surat\r\n            // karena belum ada mapping yang jelas antara job type dan jabatan pegawai\r\n            return true; // Tampilkan semua pegawai yang memiliki surat\r\n          });\r\n          \r\n          if (filteredPegawai.length > 0) {\r\n            filteredData[key] = filteredPegawai;\r\n          }\r\n        });\r\n        \r\n        setPegawaiData(filteredData);\r\n        \r\n        // Jika tidak ada data, tampilkan pesan yang sesuai\r\n        if (Object.keys(filteredData).length === 0) {\r\n          setError('Tidak ada pegawai yang tersedia untuk jabatan ini');\r\n        }\r\n      } else {\r\n        setError(response.message || 'Gagal mengambil data pegawai');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching pegawai by jabatan:', error);\r\n      setError('Terjadi kesalahan saat mengambil data pegawai');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreatePengajuan = async () => {\r\n    if (!selectedPegawai || !selectedJabatan) return;\r\n\r\n    try {\r\n      setSubmitting(true);\r\n      const response = await apiPost('/api/pengajuan', { \r\n        pegawai_nip: selectedPegawai,\r\n        jabatan_id: selectedJabatan.id,\r\n        jenis_jabatan: selectedJabatan.jenis_jabatan\r\n      }, token);\r\n      if (response.success) {\r\n        // Redirect ke halaman upload file dengan data jabatan\r\n        navigate(`/pengajuan/${response.data.id}/upload`, {\r\n          state: { \r\n            jabatan: selectedJabatan,\r\n            requiredFiles: selectedJabatan.required_files \r\n          }\r\n        });\r\n      } else {\r\n        setError(response.message || 'Gagal membuat pengajuan');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating pengajuan:', error);\r\n      setError('Terjadi kesalahan saat membuat pengajuan');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Fungsi untuk mendapatkan semua pegawai yang ditampilkan\r\n  const getDisplayedPegawai = () => {\r\n    const allPegawai: PegawaiData[] = [];\r\n    Object.values(pegawaiData).forEach(group => {\r\n      allPegawai.push(...group);\r\n    });\r\n\r\n    if (!searchTerm) return allPegawai;\r\n\r\n    return allPegawai.filter(pegawai =>\r\n      pegawai.nama.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      pegawai.jabatan.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      pegawai.unit_kerja.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      pegawai.nip.includes(searchTerm)\r\n    );\r\n  };\r\n\r\n  // Fungsi untuk handle select all\r\n  const handleSelectAll = (checked: boolean) => {\r\n    if (checked) {\r\n      const displayedPegawai = getDisplayedPegawai();\r\n      if (displayedPegawai.length > 0) {\r\n        setSelectedPegawai(displayedPegawai[0].nip); // Hanya pilih yang pertama\r\n      }\r\n    } else {\r\n      setSelectedPegawai(null);\r\n    }\r\n  };\r\n\r\n  const filteredData = getDisplayedPegawai();\r\n\r\n  // Pagination logic\r\n  const totalItems = filteredData.length;\r\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = startIndex + itemsPerPage;\r\n  const currentData = filteredData.slice(startIndex, endIndex);\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n    setSelectedPegawai(null); // Reset selection when page changes\r\n  };\r\n\r\n  const handleSearch = (value: string) => {\r\n    setSearchTerm(value);\r\n    setCurrentPage(1); // Reset to first page when searching\r\n    setSelectedPegawai(null); // Reset selection when searching\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      {/* Header dengan button kembali */}\r\n      <div className=\"flex items-center gap-4 mb-6\">\r\n        <Button\r\n          variant=\"outline\"\r\n          onClick={() => navigate('/pengajuan')}\r\n          className=\"flex items-center gap-2\"\r\n        >\r\n          <ArrowLeft className=\"h-4 w-4\" />\r\n          Kembali ke Data Pengajuan\r\n        </Button>\r\n      </div>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Users className=\"h-5 w-5\" />\r\n            Pilih Pegawai untuk Pengajuan\r\n          </CardTitle>\r\n          <div className=\"text-sm text-gray-600\">\r\n            {selectedJabatan \r\n              ? `Pilih pegawai untuk pengajuan jabatan: ${selectedJabatan.jenis_jabatan}`\r\n              : 'Pilih jabatan terlebih dahulu, kemudian pilih pegawai yang akan diajukan'\r\n            }\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {error && (\r\n            <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n              <p className=\"text-red-600\">{error}</p>\r\n            </div>\r\n          )}\r\n\r\n                     {/* Jabatan Selection */}\r\n           {!selectedJabatan && (\r\n             <div className=\"mb-6 p-6 bg-green-50 border border-green-200 rounded-lg text-center\">\r\n               <Briefcase className=\"h-12 w-12 text-green-500 mx-auto mb-4\" />\r\n               <h3 className=\"text-lg font-semibold text-green-800 mb-2\">\r\n                 Pilih Jabatan Terlebih Dahulu\r\n               </h3>\r\n               <p className=\"text-green-600 mb-4\">\r\n                 Untuk memulai pengajuan, Anda perlu memilih jenis jabatan yang akan diajukan.\r\n               </p>\r\n               <Button\r\n                 onClick={() => setShowJabatanModal(true)}\r\n                 className=\"bg-green-600 hover:bg-green-700 text-white\"\r\n               >\r\n                 <Briefcase className=\"h-4 w-4 mr-2\" />\r\n                 Pilih Jabatan\r\n               </Button>\r\n             </div>\r\n           )}\r\n\r\n          {/* Selected Jabatan Info */}\r\n          {selectedJabatan && (\r\n            <div className=\"mb-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <h3 className=\"font-semibold text-green-800\">\r\n                    Jabatan: {selectedJabatan.jenis_jabatan}\r\n                  </h3>\r\n                  <p className=\"text-sm text-green-600\">\r\n                    {selectedJabatan.required_files.length} jenis dokumen diperlukan\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Badge className=\"bg-green-600 text-white\">\r\n                    {selectedJabatan.max_dokumen} dokumen\r\n                  </Badge>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => setShowJabatanModal(true)}\r\n                    className=\"border-green-600 text-green-600 hover:bg-green-50\"\r\n                  >\r\n                    Ubah Jabatan\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Search Bar */}\r\n          <div className=\"mb-6\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n              <Input\r\n                placeholder=\"Cari pegawai berdasarkan nama, jabatan, unit kerja, atau NIP...\"\r\n                value={searchTerm}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n            {filteredData.length > 0 && (\r\n              <p className=\"text-sm text-gray-500 mt-2\">\r\n                Menampilkan {filteredData.length} pegawai (halaman {currentPage} dari {totalPages})\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* DataTable */}\r\n          <div className=\"border rounded-lg overflow-hidden\">\r\n            {!selectedJabatan ? (\r\n              <div className=\"flex items-center justify-center py-12\">\r\n                <div className=\"text-center\">\r\n                  <Briefcase className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                  <p className=\"text-gray-500\">Pilih jabatan terlebih dahulu untuk melihat daftar pegawai</p>\r\n                </div>\r\n              </div>\r\n            ) : loading ? (\r\n              <div className=\"flex items-center justify-center py-12\">\r\n                <Loader2 className=\"h-8 w-8 animate-spin mr-2\" />\r\n                <span>Memuat data pegawai...</span>\r\n              </div>\r\n            ) : error ? (\r\n              <div className=\"flex items-center justify-center py-12\">\r\n                <div className=\"text-center\">\r\n                  <AlertCircle className=\"h-12 w-12 text-red-400 mx-auto mb-4\" />\r\n                  <p className=\"text-red-600 mb-2\">{error}</p>\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    Pastikan sudah ada surat yang dibuat untuk pegawai di menu Template Generator\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead className=\"w-12\">\r\n                        <Checkbox\r\n                          checked={selectedPegawai !== null}\r\n                          onCheckedChange={handleSelectAll}\r\n                        />\r\n                      </TableHead>\r\n                      <TableHead>NIP</TableHead>\r\n                      <TableHead>Nama</TableHead>\r\n                      <TableHead>Jabatan</TableHead>\r\n                      <TableHead>Unit Kerja</TableHead>\r\n                      <TableHead>Induk Unit</TableHead>\r\n                      <TableHead className=\"text-center\">Total Surat</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {currentData.length === 0 ? (\r\n                      <TableRow>\r\n                        <TableCell colSpan={7} className=\"text-center py-8 text-gray-500\">\r\n                          {searchTerm ? (\r\n                            'Tidak ada pegawai yang sesuai dengan pencarian'\r\n                          ) : (\r\n                            <div>\r\n                              <p className=\"mb-2\">Tidak ada pegawai yang tersedia</p>\r\n                              <p className=\"text-sm text-gray-400\">\r\n                                Pastikan sudah ada surat yang dibuat untuk pegawai di menu Template Generator\r\n                              </p>\r\n                            </div>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ) : (\r\n                      currentData.map((pegawai) => (\r\n                        <TableRow key={pegawai.nip} className=\"hover:bg-gray-50\">\r\n                          <TableCell>\r\n                            <Checkbox\r\n                              checked={selectedPegawai === pegawai.nip}\r\n                              onCheckedChange={(checked) => {\r\n                                setSelectedPegawai(checked ? pegawai.nip : null);\r\n                              }}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell className=\"font-mono text-sm\">{pegawai.nip}</TableCell>\r\n                          <TableCell className=\"font-medium\">{pegawai.nama}</TableCell>\r\n                          <TableCell>{pegawai.jabatan}</TableCell>\r\n                          <TableCell>{pegawai.unit_kerja}</TableCell>\r\n                          <TableCell>{pegawai.induk_unit}</TableCell>\r\n                          <TableCell className=\"text-center\">\r\n                            <Badge variant=\"secondary\">\r\n                              {pegawai.total_surat} surat\r\n                            </Badge>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n\r\n                {/* Pagination */}\r\n                {totalPages > 1 && (\r\n                  <div className=\"flex items-center justify-between px-4 py-3 border-t bg-gray-50\">\r\n                    <div className=\"text-sm text-gray-700\">\r\n                      Menampilkan {startIndex + 1} sampai {Math.min(endIndex, totalItems)} dari {totalItems} pegawai\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Button\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={() => handlePageChange(currentPage - 1)}\r\n                        disabled={currentPage === 1}\r\n                      >\r\n                        <ChevronLeft className=\"h-4 w-4\" />\r\n                        Sebelumnya\r\n                      </Button>\r\n                      \r\n                      <div className=\"flex items-center gap-1\">\r\n                        {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n                          <Button\r\n                            key={page}\r\n                            variant={currentPage === page ? \"default\" : \"outline\"}\r\n                            size=\"sm\"\r\n                            onClick={() => handlePageChange(page)}\r\n                            className=\"w-8 h-8 p-0\"\r\n                          >\r\n                            {page}\r\n                          </Button>\r\n                        ))}\r\n                      </div>\r\n                      \r\n                      <Button\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={() => handlePageChange(currentPage + 1)}\r\n                        disabled={currentPage === totalPages}\r\n                      >\r\n                        Selanjutnya\r\n                        <ChevronRight className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          {/* Action Button */}\r\n          <div className=\"mt-6 flex justify-end\">\r\n            <Button\r\n              onClick={handleCreatePengajuan}\r\n              disabled={!selectedPegawai || !selectedJabatan || submitting}\r\n              size=\"lg\"\r\n              className=\"bg-green-600 hover:bg-green-700 text-white\"\r\n            >\r\n              {submitting ? (\r\n                <>\r\n                  <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                  Membuat Pengajuan...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Send className=\"h-4 w-4 mr-2\" />\r\n                  Proses Pengajuan\r\n                </>\r\n              )}\r\n            </Button>\r\n          </div>\r\n\r\n          {!selectedPegawai && selectedJabatan && filteredData.length > 0 && (\r\n            <p className=\"text-sm text-gray-500 mt-2 text-center\">\r\n              Pilih satu pegawai untuk melanjutkan proses pengajuan\r\n            </p>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Jabatan Selection Modal */}\r\n      <JabatanSelectionModal\r\n        open={showJabatanModal}\r\n        onOpenChange={setShowJabatanModal}\r\n        onJabatanSelected={handleJabatanSelected}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PengajuanSelect; "],"names":["JabatanSelectionModal","open","onOpenChange","onJabatanSelected","token","useAuth","jobTypes","setJobTypes","useState","loading","setLoading","searchTerm","setSearchTerm","selectedJabatan","setSelectedJabatan","useEffect","fetchJobTypes","response","apiGet","error","filteredJobTypes","job","handleJabatanSelect","jabatan","handleConfirm","handleCancel","Dialog","jsxs","DialogContent","DialogHeader","DialogTitle","jsx","Users","Search","Input","e","Loader2","FileText","Card","CardHeader","CardTitle","Badge","CardContent","ArrowRight","Button","PengajuanSelect","navigate","useNavigate","user","isAuthenticated","pegawaiData","setPegawaiData","selectedPegawai","setSelectedPegawai","setError","submitting","setSubmitting","currentPage","setCurrentPage","itemsPerPage","showJabatanModal","setShowJabatanModal","handleJabatanSelected","fetchPegawaiByJabatan","jabatanId","filteredData","key","pegawaiList","filteredPegawai","pegawai","handleCreatePengajuan","apiPost","getDisplayedPegawai","allPegawai","group","handleSelectAll","checked","displayedPegawai","totalItems","totalPages","startIndex","endIndex","currentData","handlePageChange","page","handleSearch","value","ArrowLeft","Briefcase","AlertCircle","Fragment","Table","TableHeader","TableRow","TableHead","Checkbox","TableBody","TableCell","ChevronLeft","_","i","ChevronRight","Send"],"mappings":"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"}