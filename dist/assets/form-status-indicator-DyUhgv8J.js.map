{"version":3,"file":"form-status-indicator-DyUhgv8J.js","sources":["../../src/hooks/useFormFeedback.ts","../../src/components/FormFeedbackProvider.tsx","../../src/components/ui/form-status-indicator.tsx"],"sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { showSuccess, showError, showInfo, showWarning } from '@/lib/messageUtils';\r\n\r\nexport interface FormFeedbackState {\r\n  isSubmitting: boolean;\r\n  isValidating: boolean;\r\n  isDirty: boolean;\r\n  isValid: boolean;\r\n  errors: Record<string, string[]>;\r\n  warnings: Record<string, string[]>;\r\n  success: Record<string, string[]>;\r\n  lastSaved?: Date;\r\n  hasUnsavedChanges: boolean;\r\n}\r\n\r\nexport interface FormFeedbackOptions {\r\n  autoSave?: boolean;\r\n  autoSaveInterval?: number; // in milliseconds\r\n  showToastOnSave?: boolean;\r\n  showToastOnError?: boolean;\r\n  showToastOnValidation?: boolean;\r\n  debounceValidation?: number; // in milliseconds\r\n}\r\n\r\nexport interface FormFeedbackReturn<T> {\r\n  // State\r\n  feedback: FormFeedbackState;\r\n  \r\n  // Actions\r\n  startSubmission: () => void;\r\n  endSubmission: (success: boolean, message?: string) => void;\r\n  setValidating: (validating: boolean) => void;\r\n  setDirty: (dirty: boolean) => void;\r\n  setValid: (valid: boolean) => void;\r\n  setErrors: (errors: Record<string, string[]>) => void;\r\n  setWarnings: (warnings: Record<string, string[]>) => void;\r\n  setSuccess: (success: Record<string, string[]>) => void;\r\n  clearFeedback: () => void;\r\n  markSaved: () => void;\r\n  \r\n  // Field-specific actions\r\n  setFieldError: (field: string, error: string | string[]) => void;\r\n  setFieldWarning: (field: string, warning: string | string[]) => void;\r\n  setFieldSuccess: (field: string, success: string | string[]) => void;\r\n  clearFieldFeedback: (field: string) => void;\r\n  \r\n  // Validation helpers\r\n  validateField: (field: string, value: any, schema?: any) => Promise<boolean>;\r\n  \r\n  // Auto-save helpers\r\n  triggerAutoSave: () => Promise<void>;\r\n  \r\n  // Utility functions\r\n  hasFieldError: (field: string) => boolean;\r\n  hasFieldWarning: (field: string) => boolean;\r\n  hasFieldSuccess: (field: string) => boolean;\r\n  getFieldFeedback: (field: string) => {\r\n    error?: string;\r\n    warning?: string;\r\n    success?: string;\r\n    hasError: boolean;\r\n    hasWarning: boolean;\r\n    hasSuccess: boolean;\r\n  };\r\n}\r\n\r\nexport function useFormFeedback<T>(\r\n  initialData: T,\r\n  options: FormFeedbackOptions = {}\r\n): FormFeedbackReturn<T> {\r\n  const {\r\n    autoSave = false,\r\n    autoSaveInterval = 30000, // 30 seconds\r\n    showToastOnSave = true,\r\n    showToastOnError = true,\r\n    showToastOnValidation = false,\r\n    debounceValidation = 300\r\n  } = options;\r\n\r\n  const [feedback, setFeedback] = useState<FormFeedbackState>({\r\n    isSubmitting: false,\r\n    isValidating: false,\r\n    isDirty: false,\r\n    isValid: false,\r\n    errors: {},\r\n    warnings: {},\r\n    success: {},\r\n    hasUnsavedChanges: false\r\n  });\r\n\r\n  const { toast } = useToast();\r\n  const autoSaveTimeoutRef = useRef<NodeJS.Timeout>();\r\n  const validationTimeoutRef = useRef<NodeJS.Timeout>();\r\n  const dataRef = useRef<T>(initialData);\r\n\r\n  // Update data reference\r\n  useEffect(() => {\r\n    dataRef.current = initialData;\r\n  }, [initialData]);\r\n\r\n  // Auto-save setup\r\n  useEffect(() => {\r\n    if (autoSave && feedback.isDirty && !feedback.isSubmitting) {\r\n      if (autoSaveTimeoutRef.current) {\r\n        clearTimeout(autoSaveTimeoutRef.current);\r\n      }\r\n      \r\n      autoSaveTimeoutRef.current = setTimeout(() => {\r\n        triggerAutoSave();\r\n      }, autoSaveInterval);\r\n    }\r\n\r\n    return () => {\r\n      if (autoSaveTimeoutRef.current) {\r\n        clearTimeout(autoSaveTimeoutRef.current);\r\n      }\r\n    };\r\n  }, [autoSave, feedback.isDirty, feedback.isSubmitting, autoSaveInterval]);\r\n\r\n  // Start submission\r\n  const startSubmission = useCallback(() => {\r\n    setFeedback(prev => ({\r\n      ...prev,\r\n      isSubmitting: true,\r\n      isValidating: true\r\n    }));\r\n  }, []);\r\n\r\n  // End submission\r\n  const endSubmission = useCallback((success: boolean, message?: string) => {\r\n    setFeedback(prev => ({\r\n      ...prev,\r\n      isSubmitting: false,\r\n      isValidating: false,\r\n      hasUnsavedChanges: !success\r\n    }));\r\n\r\n    if (success) {\r\n      markSaved();\r\n      if (showToastOnSave && message) {\r\n        showSuccess('SAVE_SUCCESS', message);\r\n      }\r\n    } else {\r\n      if (showToastOnError && message) {\r\n        showError('SAVE_FAILED', message);\r\n      }\r\n    }\r\n  }, [showToastOnSave, showToastOnError]);\r\n\r\n  // Set validating state\r\n  const setValidating = useCallback((validating: boolean) => {\r\n    setFeedback(prev => ({ ...prev, isValidating: validating }));\r\n  }, []);\r\n\r\n  // Set dirty state\r\n  const setDirty = useCallback((dirty: boolean) => {\r\n    setFeedback(prev => ({\r\n      ...prev,\r\n      isDirty: dirty,\r\n      hasUnsavedChanges: dirty\r\n    }));\r\n  }, []);\r\n\r\n  // Set valid state\r\n  const setValid = useCallback((valid: boolean) => {\r\n    setFeedback(prev => ({ ...prev, isValid: valid }));\r\n  }, []);\r\n\r\n  // Set errors\r\n  const setErrors = useCallback((errors: Record<string, string[]>) => {\r\n    setFeedback(prev => ({ ...prev, errors }));\r\n    \r\n    if (showToastOnValidation && Object.keys(errors).length > 0) {\r\n      const firstError = Object.values(errors)[0]?.[0];\r\n      if (firstError) {\r\n        showError('VALIDATION_ERROR', firstError);\r\n      }\r\n    }\r\n  }, [showToastOnValidation]);\r\n\r\n  // Set warnings\r\n  const setWarnings = useCallback((warnings: Record<string, string[]>) => {\r\n    setFeedback(prev => ({ ...prev, warnings }));\r\n  }, []);\r\n\r\n  // Set success messages\r\n  const setSuccess = useCallback((success: Record<string, string[]>) => {\r\n    setFeedback(prev => ({ ...prev, success }));\r\n  }, []);\r\n\r\n  // Clear all feedback\r\n  const clearFeedback = useCallback(() => {\r\n    setFeedback(prev => ({\r\n      ...prev,\r\n      errors: {},\r\n      warnings: {},\r\n      success: {}\r\n    }));\r\n  }, []);\r\n\r\n  // Mark as saved\r\n  const markSaved = useCallback(() => {\r\n    setFeedback(prev => ({\r\n      ...prev,\r\n      isDirty: false,\r\n      hasUnsavedChanges: false,\r\n      lastSaved: new Date(),\r\n      success: {\r\n        ...prev.success,\r\n        _general: ['Data berhasil disimpan']\r\n      }\r\n    }));\r\n  }, []);\r\n\r\n  // Field-specific error\r\n  const setFieldError = useCallback((field: string, error: string | string[]) => {\r\n    const errorArray = Array.isArray(error) ? error : [error];\r\n    setFeedback(prev => ({\r\n      ...prev,\r\n      errors: {\r\n        ...prev.errors,\r\n        [field]: errorArray\r\n      }\r\n    }));\r\n  }, []);\r\n\r\n  // Field-specific warning\r\n  const setFieldWarning = useCallback((field: string, warning: string | string[]) => {\r\n    const warningArray = Array.isArray(warning) ? warning : [warning];\r\n    setFeedback(prev => ({\r\n      ...prev,\r\n      warnings: {\r\n        ...prev.warnings,\r\n        [field]: warningArray\r\n      }\r\n    }));\r\n  }, []);\r\n\r\n  // Field-specific success\r\n  const setFieldSuccess = useCallback((field: string, success: string | string[]) => {\r\n    const successArray = Array.isArray(success) ? success : [success];\r\n    setFeedback(prev => ({\r\n      ...prev,\r\n      success: {\r\n        ...prev.success,\r\n        [field]: successArray\r\n      }\r\n    }));\r\n  }, []);\r\n\r\n  // Clear field feedback\r\n  const clearFieldFeedback = useCallback((field: string) => {\r\n    setFeedback(prev => ({\r\n      ...prev,\r\n      errors: {\r\n        ...prev.errors,\r\n        [field]: []\r\n      },\r\n      warnings: {\r\n        ...prev.warnings,\r\n        [field]: []\r\n      },\r\n      success: {\r\n        ...prev.success,\r\n        [field]: []\r\n      }\r\n    }));\r\n  }, []);\r\n\r\n  // Validate field with debouncing\r\n  const validateField = useCallback(async (field: string, value: any, schema?: any): Promise<boolean> => {\r\n    if (validationTimeoutRef.current) {\r\n      clearTimeout(validationTimeoutRef.current);\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      validationTimeoutRef.current = setTimeout(async () => {\r\n        try {\r\n          if (schema) {\r\n            await schema.parseAsync(value);\r\n            clearFieldFeedback(field);\r\n            setFieldSuccess(field, 'Data valid');\r\n            resolve(true);\r\n          } else {\r\n            resolve(true);\r\n          }\r\n        } catch (error: any) {\r\n          if (error.errors && error.errors.length > 0) {\r\n            const errorMessage = error.errors[0].message;\r\n            setFieldError(field, errorMessage);\r\n            resolve(false);\r\n          } else {\r\n            setFieldError(field, 'Data tidak valid');\r\n            resolve(false);\r\n          }\r\n        }\r\n      }, debounceValidation);\r\n    });\r\n  }, [debounceValidation, clearFieldFeedback, setFieldError, setFieldSuccess]);\r\n\r\n  // Trigger auto-save\r\n  const triggerAutoSave = useCallback(async () => {\r\n    if (feedback.isSubmitting || !feedback.isDirty) return;\r\n\r\n    try {\r\n      setValidating(true);\r\n      // Here you would implement your auto-save logic\r\n      // For now, just mark as saved\r\n      markSaved();\r\n      \r\n      if (showToastOnSave) {\r\n        showInfo('Data otomatis tersimpan');\r\n      }\r\n    } catch (error) {\r\n      showError('SAVE_FAILED', 'Gagal auto-save');\r\n    } finally {\r\n      setValidating(false);\r\n    }\r\n  }, [feedback.isSubmitting, feedback.isDirty, markSaved, showToastOnSave, setValidating]);\r\n\r\n  // Helper functions\r\n  const hasFieldError = useCallback((field: string) => {\r\n    return feedback.errors[field] && feedback.errors[field].length > 0;\r\n  }, [feedback.errors]);\r\n\r\n  const hasFieldWarning = useCallback((field: string) => {\r\n    return feedback.warnings[field] && feedback.warnings[field].length > 0;\r\n  }, [feedback.success]);\r\n\r\n  const hasFieldSuccess = useCallback((field: string) => {\r\n    return feedback.success[field] && feedback.success[field].length > 0;\r\n  }, [feedback.success]);\r\n\r\n  const getFieldFeedback = useCallback((field: string) => {\r\n    return {\r\n      error: feedback.errors[field]?.[0],\r\n      warning: feedback.warnings[field]?.[0],\r\n      success: feedback.success[field]?.[0],\r\n      hasError: hasFieldError(field),\r\n      hasWarning: hasFieldWarning(field),\r\n      hasSuccess: hasFieldSuccess(field)\r\n    };\r\n  }, [feedback, hasFieldError, hasFieldWarning, hasFieldSuccess]);\r\n\r\n  return {\r\n    feedback,\r\n    startSubmission,\r\n    endSubmission,\r\n    setValidating,\r\n    setDirty,\r\n    setValid,\r\n    setErrors,\r\n    setWarnings,\r\n    setSuccess,\r\n    clearFeedback,\r\n    markSaved,\r\n    setFieldError,\r\n    setFieldWarning,\r\n    setFieldSuccess,\r\n    clearFieldFeedback,\r\n    validateField,\r\n    triggerAutoSave,\r\n    hasFieldError,\r\n    hasFieldWarning,\r\n    hasFieldSuccess,\r\n    getFieldFeedback\r\n  };\r\n}\r\n","import React, { createContext, useContext, ReactNode } from 'react';\r\nimport { useFormFeedback, FormFeedbackReturn } from '@/hooks/useFormFeedback';\r\n\r\ninterface FormFeedbackContextType<T = any> {\r\n  formFeedback: FormFeedbackReturn<T>;\r\n}\r\n\r\nconst FormFeedbackContext = createContext<FormFeedbackContextType | null>(null);\r\n\r\ninterface FormFeedbackProviderProps<T> {\r\n  children: ReactNode;\r\n  initialData: T;\r\n  autoSave?: boolean;\r\n  autoSaveInterval?: number;\r\n  showToastOnSave?: boolean;\r\n  showToastOnError?: boolean;\r\n  showToastOnValidation?: boolean;\r\n  debounceValidation?: number;\r\n}\r\n\r\nexport function FormFeedbackProvider<T>({\r\n  children,\r\n  initialData,\r\n  autoSave = false,\r\n  autoSaveInterval = 30000,\r\n  showToastOnSave = true,\r\n  showToastOnError = true,\r\n  showToastOnValidation = false,\r\n  debounceValidation = 300\r\n}: FormFeedbackProviderProps<T>) {\r\n  const formFeedback = useFormFeedback(initialData, {\r\n    autoSave,\r\n    autoSaveInterval,\r\n    showToastOnSave,\r\n    showToastOnError,\r\n    showToastOnValidation,\r\n    debounceValidation\r\n  });\r\n\r\n  return (\r\n    <FormFeedbackContext.Provider value={{ formFeedback }}>\r\n      {children}\r\n    </FormFeedbackContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useFormFeedbackContext<T = any>(): FormFeedbackReturn<T> {\r\n  const context = useContext(FormFeedbackContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useFormFeedbackContext must be used within a FormFeedbackProvider');\r\n  }\r\n  \r\n  return context.formFeedback as FormFeedbackReturn<T>;\r\n}\r\n\r\n// HOC untuk wrap components dengan form feedback\r\nexport function withFormFeedback<T>(\r\n  Component: React.ComponentType<any>,\r\n  feedbackOptions: Omit<FormFeedbackProviderProps<T>, 'children'>\r\n) {\r\n  return function WrappedComponent(props: any) {\r\n    return (\r\n      <FormFeedbackProvider {...feedbackOptions}>\r\n        <Component {...props} />\r\n      </FormFeedbackProvider>\r\n    );\r\n  };\r\n}\r\n\r\nexport default FormFeedbackProvider;\r\n","import React from 'react';\r\nimport { cn } from '@/lib/utils';\r\nimport { \r\n  CheckCircle, \r\n  AlertCircle, \r\n  Clock, \r\n  Save, \r\n  Loader2,\r\n  AlertTriangle,\r\n  Info\r\n} from 'lucide-react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { FormFeedbackState } from '@/hooks/useFormFeedback';\r\n\r\ninterface FormStatusIndicatorProps {\r\n  feedback: FormFeedbackState;\r\n  showLastSaved?: boolean;\r\n  showUnsavedChanges?: boolean;\r\n  showValidationStatus?: boolean;\r\n  className?: string;\r\n  compact?: boolean;\r\n}\r\n\r\nexport const FormStatusIndicator: React.FC<FormStatusIndicatorProps> = ({\r\n  feedback,\r\n  showLastSaved = true,\r\n  showUnsavedChanges = true,\r\n  showValidationStatus = true,\r\n  className,\r\n  compact = false\r\n}) => {\r\n  const {\r\n    isSubmitting,\r\n    isValidating,\r\n    isDirty,\r\n    isValid,\r\n    hasUnsavedChanges,\r\n    lastSaved,\r\n    errors,\r\n    warnings,\r\n    success\r\n  } = feedback;\r\n\r\n  const hasErrors = Object.values(errors).some(errorArray => errorArray.length > 0);\r\n  const hasWarnings = Object.values(warnings).some(warningArray => warningArray.length > 0);\r\n  const hasSuccess = Object.values(success).some(successArray => successArray.length > 0);\r\n  const totalErrors = Object.values(errors).reduce((sum, errorArray) => sum + errorArray.length, 0);\r\n  const totalWarnings = Object.values(warnings).reduce((sum, warningArray) => sum + warningArray.length, 0);\r\n\r\n  const getStatusColor = () => {\r\n    if (isSubmitting || isValidating) return 'text-blue-600';\r\n    if (hasErrors) return 'text-red-600';\r\n    if (hasWarnings) return 'text-yellow-600';\r\n    if (isValid && !hasUnsavedChanges) return 'text-green-600';\r\n    if (isDirty || hasUnsavedChanges) return 'text-orange-600';\r\n    return 'text-gray-600';\r\n  };\r\n\r\n  const getStatusIcon = () => {\r\n    if (isSubmitting) return <Loader2 className=\"h-4 w-4 animate-spin text-green-600\" />;\r\n    if (isValidating) return <Clock className=\"h-4 w-4 animate-pulse\" />;\r\n    if (hasErrors) return <AlertCircle className=\"h-4 w-4\" />;\r\n    if (hasWarnings) return <AlertTriangle className=\"h-4 w-4\" />;\r\n    if (isValid && !hasUnsavedChanges) return <CheckCircle className=\"h-4 w-4\" />;\r\n    if (isDirty || hasUnsavedChanges) return <Save className=\"h-4 w-4\" />;\r\n    return <Info className=\"h-4 w-4\" />;\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    if (isSubmitting) return 'Menyimpan...';\r\n    if (isValidating) return 'Memvalidasi...';\r\n    if (hasErrors) return `Ada ${totalErrors} kesalahan`;\r\n    if (hasWarnings) return `Ada ${totalWarnings} peringatan`;\r\n    if (isValid && !hasUnsavedChanges) return 'Form valid';\r\n    if (isDirty || hasUnsavedChanges) return 'Ada perubahan belum disimpan';\r\n    return 'Form siap';\r\n  };\r\n\r\n  const formatLastSaved = (date: Date) => {\r\n    const now = new Date();\r\n    const diff = now.getTime() - date.getTime();\r\n    const seconds = Math.floor(diff / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n\r\n    if (seconds < 60) return `${seconds} detik yang lalu`;\r\n    if (minutes < 60) return `${minutes} menit yang lalu`;\r\n    if (hours < 24) return `${hours} jam yang lalu`;\r\n    return date.toLocaleDateString('id-ID');\r\n  };\r\n\r\n  if (compact) {\r\n    return (\r\n      <div className={cn(\"flex items-center gap-2\", className)}>\r\n        <div className={cn(\"flex items-center gap-1\", getStatusColor())}>\r\n          {getStatusIcon()}\r\n          <span className=\"text-sm font-medium\">{getStatusText()}</span>\r\n        </div>\r\n        \r\n        {hasUnsavedChanges && (\r\n          <Badge variant=\"outline\" className=\"text-orange-600 border-orange-200\">\r\n            Belum disimpan\r\n          </Badge>\r\n        )}\r\n        \r\n        {totalErrors > 0 && (\r\n          <Badge variant=\"destructive\" className=\"text-xs\">\r\n            {totalErrors} error\r\n          </Badge>\r\n        )}\r\n        \r\n        {totalWarnings > 0 && (\r\n          <Badge variant=\"secondary\" className=\"text-yellow-600 bg-yellow-100 border-yellow-200 text-xs\">\r\n            {totalWarnings} warning\r\n          </Badge>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={cn(\"space-y-3\", className)}>\r\n      {/* Main status */}\r\n      <div className={cn(\"flex items-center gap-2\", getStatusColor())}>\r\n        {getStatusIcon()}\r\n        <span className=\"text-sm font-medium\">{getStatusText()}</span>\r\n      </div>\r\n\r\n      {/* Detailed status */}\r\n      <div className=\"space-y-2 text-xs text-gray-600\">\r\n        {showValidationStatus && (\r\n          <div className=\"flex items-center gap-4\">\r\n            <span>Valid: {isValid ? 'Ya' : 'Tidak'}</span>\r\n            <span>Dirty: {isDirty ? 'Ya' : 'Tidak'}</span>\r\n            {totalErrors > 0 && <span className=\"text-red-600\">Errors: {totalErrors}</span>}\r\n            {totalWarnings > 0 && <span className=\"text-yellow-600\">Warnings: {totalWarnings}</span>}\r\n          </div>\r\n        )}\r\n\r\n        {showUnsavedChanges && hasUnsavedChanges && (\r\n          <div className=\"flex items-center gap-1 text-orange-600\">\r\n            <AlertTriangle className=\"h-3 w-3\" />\r\n            <span>Ada perubahan yang belum disimpan</span>\r\n          </div>\r\n        )}\r\n\r\n        {showLastSaved && lastSaved && (\r\n          <div className=\"flex items-center gap-1 text-gray-500\">\r\n            <Clock className=\"h-3 w-3\" />\r\n            <span>Terakhir disimpan: {formatLastSaved(lastSaved)}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Error summary */}\r\n      {hasErrors && (\r\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-2\">\r\n          <div className=\"text-sm font-medium text-red-800 mb-1\">Kesalahan:</div>\r\n          <ul className=\"text-xs text-red-700 space-y-1\">\r\n            {Object.entries(errors).map(([field, errorArray]) => \r\n              errorArray.map((error, index) => (\r\n                <li key={`${field}-${index}`}>\r\n                  <span className=\"font-medium\">{field}:</span> {error}\r\n                </li>\r\n              ))\r\n            )}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {/* Warning summary */}\r\n      {hasWarnings && (\r\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-2\">\r\n          <div className=\"text-sm font-medium text-yellow-800 mb-1\">Peringatan:</div>\r\n          <ul className=\"text-xs text-yellow-700 space-y-1\">\r\n            {Object.entries(warnings).map(([field, warningArray]) => \r\n              warningArray.map((warning, index) => (\r\n                <li key={`${field}-${index}`}>\r\n                  <span className=\"font-medium\">{field}:</span> {warning}\r\n                </li>\r\n              ))\r\n            )}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Compact variant for headers\r\nexport const CompactFormStatusIndicator: React.FC<FormStatusIndicatorProps> = (props) => (\r\n  <FormStatusIndicator {...props} compact={true} />\r\n);\r\n\r\n// Detailed variant for sidebars\r\nexport const DetailedFormStatusIndicator: React.FC<FormStatusIndicatorProps> = (props) => (\r\n  <FormStatusIndicator \r\n    {...props} \r\n    showLastSaved={true}\r\n    showUnsavedChanges={true}\r\n    showValidationStatus={true}\r\n  />\r\n);\r\n\r\nexport default FormStatusIndicator;\r\n"],"names":["useFormFeedback","initialData","options","autoSave","autoSaveInterval","showToastOnSave","showToastOnError","showToastOnValidation","debounceValidation","feedback","setFeedback","useState","useToast","autoSaveTimeoutRef","useRef","validationTimeoutRef","dataRef","useEffect","triggerAutoSave","startSubmission","useCallback","prev","endSubmission","success","message","markSaved","showSuccess","showError","setValidating","validating","setDirty","dirty","setValid","valid","setErrors","errors","firstError","_a","setWarnings","warnings","setSuccess","clearFeedback","setFieldError","field","error","errorArray","setFieldWarning","warning","warningArray","setFieldSuccess","successArray","clearFieldFeedback","validateField","value","schema","resolve","errorMessage","showInfo","hasFieldError","hasFieldWarning","hasFieldSuccess","getFieldFeedback","_b","_c","FormFeedbackContext","createContext","FormFeedbackProvider","children","formFeedback","jsx","useFormFeedbackContext","context","useContext","FormStatusIndicator","showLastSaved","showUnsavedChanges","showValidationStatus","className","compact","isSubmitting","isValidating","isDirty","isValid","hasUnsavedChanges","lastSaved","hasErrors","hasWarnings","totalErrors","sum","totalWarnings","getStatusColor","getStatusIcon","Loader2","Clock","AlertCircle","AlertTriangle","CheckCircle","Save","Info","getStatusText","formatLastSaved","date","diff","seconds","minutes","hours","cn","jsxs","Badge","index"],"mappings":"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"}