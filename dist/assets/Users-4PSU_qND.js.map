{"version":3,"file":"Users-4PSU_qND.js","sources":["../../src/pages/Users.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { apiGet, apiPost, apiPut, apiDelete } from '@/lib/api';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogFooter,\r\n} from '@/components/ui/dialog';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from '@/components/ui/table';\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n} from '@/components/ui/alert-dialog';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { \r\n  Plus, \r\n  Edit, \r\n  Trash2, \r\n  Search, \r\n  Users as UsersIcon, \r\n  Loader2,\r\n  Eye,\r\n  EyeOff,\r\n  RefreshCw,\r\n  Copy,\r\n  Check\r\n} from 'lucide-react';\r\nimport { toast } from '@/hooks/use-toast';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  full_name: string;\r\n  role: 'admin' | 'operator' | 'user' | 'admin_wilayah';\r\n  office_id?: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\ninterface UserFormData {\r\n  email: string;\r\n  full_name: string;\r\n  password: string;\r\n  role: 'admin' | 'operator' | 'user' | 'admin_wilayah';\r\n  office_id: string;\r\n}\r\n\r\nconst Users = () => {\r\n  const { user, token } = useAuth();\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [showAddDialog, setShowAddDialog] = useState(false);\r\n  const [showEditDialog, setShowEditDialog] = useState(false);\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\r\n  const [formData, setFormData] = useState<UserFormData>({\r\n    email: '',\r\n    full_name: '',\r\n    password: '',\r\n    role: 'user',\r\n    office_id: ''\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [showAddUserResultModal, setShowAddUserResultModal] = useState(false);\r\n  const [addUserSuccess, setAddUserSuccess] = useState<boolean | null>(null);\r\n  const [addUserMessage, setAddUserMessage] = useState('');\r\n  const [copiedPassword, setCopiedPassword] = useState(false);\r\n\r\n  // Generate secure password\r\n  const generateSecurePassword = () => {\r\n    const length = 12;\r\n    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';\r\n    let password = '';\r\n    \r\n    // Ensure at least one character from each category\r\n    const lowercase = 'abcdefghijklmnopqrstuvwxyz';\r\n    const uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    const numbers = '0123456789';\r\n    const symbols = '!@#$%^&*';\r\n    \r\n    password += lowercase[Math.floor(Math.random() * lowercase.length)];\r\n    password += uppercase[Math.floor(Math.random() * uppercase.length)];\r\n    password += numbers[Math.floor(Math.random() * numbers.length)];\r\n    password += symbols[Math.floor(Math.random() * symbols.length)];\r\n    \r\n    // Fill the rest with random characters\r\n    for (let i = 4; i < length; i++) {\r\n      password += charset[Math.floor(Math.random() * charset.length)];\r\n    }\r\n    \r\n    // Shuffle the password\r\n    return password.split('').sort(() => Math.random() - 0.5).join('');\r\n  };\r\n\r\n  // Copy password to clipboard\r\n  const copyPasswordToClipboard = async (password: string) => {\r\n    try {\r\n      // Try modern clipboard API first\r\n      await navigator.clipboard.writeText(password);\r\n      setCopiedPassword(true);\r\n      toast({\r\n        title: \"Password disalin\",\r\n        description: \"Password telah disalin ke clipboard\",\r\n      });\r\n      setTimeout(() => setCopiedPassword(false), 2000);\r\n    } catch (err) {\r\n      // Fallback to legacy method\r\n      try {\r\n        const textarea = document.createElement('textarea');\r\n        textarea.value = password;\r\n        textarea.style.position = 'fixed';\r\n        textarea.style.opacity = '0';\r\n        textarea.style.left = '-999999px';\r\n        textarea.style.top = '-999999px';\r\n        document.body.appendChild(textarea);\r\n        textarea.focus();\r\n        textarea.select();\r\n        \r\n        const successful = document.execCommand('copy');\r\n        document.body.removeChild(textarea);\r\n        \r\n        if (successful) {\r\n          setCopiedPassword(true);\r\n          toast({\r\n            title: \"Password disalin\",\r\n            description: \"Password telah disalin ke clipboard\",\r\n          });\r\n          setTimeout(() => setCopiedPassword(false), 2000);\r\n        } else {\r\n          throw new Error('execCommand failed');\r\n        }\r\n      } catch (fallbackErr) {\r\n        toast({\r\n          title: \"Gagal menyalin\",\r\n          description: \"Tidak dapat menyalin password ke clipboard\",\r\n          variant: \"destructive\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Generate and set password\r\n  const handleGeneratePassword = () => {\r\n    const newPassword = generateSecurePassword();\r\n    setFormData({ ...formData, password: newPassword });\r\n    toast({\r\n      title: \"Password di-generate\",\r\n      description: \"Password secure telah di-generate\",\r\n    });\r\n  };\r\n\r\n  // Check if user is admin\r\n  if (user?.role !== 'admin') {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <Card>\r\n          <CardContent className=\"pt-6\">\r\n            <div className=\"text-center\">\r\n              <h2 className=\"text-xl font-semibold text-red-600 mb-2\">Akses Ditolak</h2>\r\n              <p className=\"text-gray-600\">Anda tidak memiliki akses ke halaman ini.</p>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    if (!token) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const response = await apiGet('/api/users', token);\r\n      setUsers(response.users || []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch users:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Gagal mengambil data user\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddUser = () => {\r\n    setFormData({\r\n      email: '',\r\n      full_name: '',\r\n      password: '',\r\n      role: 'user',\r\n      office_id: ''\r\n    });\r\n    setShowAddDialog(true);\r\n  };\r\n\r\n  const handleEditUser = (user: User) => {\r\n    setSelectedUser(user);\r\n    setFormData({\r\n      email: user.email,\r\n      full_name: user.full_name,\r\n      password: '', // Don't show password when editing\r\n      role: user.role,\r\n      office_id: user.office_id || ''\r\n    });\r\n    setShowEditDialog(true);\r\n  };\r\n\r\n  const handleDeleteUser = (user: User) => {\r\n    setSelectedUser(user);\r\n    setShowDeleteDialog(true);\r\n  };\r\n\r\n  const handleSubmit = async (isEdit: boolean = false) => {\r\n    if (!token) return;\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      if (isEdit && selectedUser) {\r\n        // Update user\r\n        const updateData = { ...formData };\r\n        if (!updateData.password) {\r\n          delete updateData.password; // Don't send empty password\r\n        }\r\n        await apiPut(`/api/users/${selectedUser.id}`, updateData, token);\r\n        setAddUserSuccess(true);\r\n        setAddUserMessage('User berhasil diperbarui.');\r\n      } else {\r\n        // Create new user\r\n        await apiPost('/api/users', formData, token);\r\n        setAddUserSuccess(true);\r\n        setAddUserMessage('User berhasil ditambahkan.');\r\n      }\r\n      \r\n      fetchUsers();\r\n      // Close form modal first, then show result modal\r\n      setShowAddDialog(false);\r\n      setShowEditDialog(false);\r\n      setFormData({\r\n        email: '',\r\n        full_name: '',\r\n        password: '',\r\n        role: 'user',\r\n        office_id: ''\r\n      });\r\n    } catch (error: any) {\r\n      setAddUserSuccess(false);\r\n      setAddUserMessage(error?.message || 'Gagal menyimpan user.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n      // Close form modal first, then show result modal\r\n      setShowAddDialog(false);\r\n      setShowEditDialog(false);\r\n      setShowAddUserResultModal(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!token || !selectedUser) return;\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      await apiDelete(`/api/users/${selectedUser.id}`, token);\r\n      toast({\r\n        title: \"Sukses\",\r\n        description: \"User berhasil dihapus\",\r\n      });\r\n      fetchUsers();\r\n      setShowDeleteDialog(false);\r\n      setSelectedUser(null);\r\n    } catch (error) {\r\n      console.error('Failed to delete user:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Gagal menghapus user\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const filteredUsers = users.filter(user =>\r\n    user.full_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    user.role.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const getRoleBadgeColor = (role: string) => {\r\n    switch (role) {\r\n      case 'admin':\r\n        return 'bg-red-100 text-red-800';\r\n      case 'operator':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'user':\r\n        return 'bg-green-100 text-green-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      {/* Modal Hasil Tambah User */}\r\n      {showAddUserResultModal && (\r\n        <div className=\"fixed inset-0 z-[9999] flex items-center justify-center bg-black/20 backdrop-blur-sm animate-in fade-in-0 duration-200\">\r\n          <div className=\"bg-white rounded-2xl shadow-2xl p-8 max-w-sm w-full flex flex-col items-center animate-in zoom-in-95 duration-200\">\r\n            {addUserSuccess ? (\r\n              <div className=\"flex flex-col items-center\">\r\n                <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mb-4\">\r\n                  <svg className=\"w-10 h-10 text-green-600\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 13l4 4L19 7\" /></svg>\r\n                </div>\r\n                <h2 className=\"text-2xl font-bold mb-2 text-gray-900\">Berhasil</h2>\r\n                <p className=\"text-gray-600 mb-6 text-center\">{addUserMessage}</p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex flex-col items-center\">\r\n                <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mb-4\">\r\n                  <svg className=\"w-10 h-10 text-red-600\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" /></svg>\r\n                </div>\r\n                <h2 className=\"text-2xl font-bold mb-2 text-gray-900\">Gagal</h2>\r\n                <p className=\"text-gray-600 mb-6 text-center\">{addUserMessage}</p>\r\n              </div>\r\n            )}\r\n            <button\r\n              className=\"w-full py-3 rounded-lg bg-green-600 hover:bg-green-700 text-white text-lg font-semibold shadow transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n              onClick={() => setShowAddUserResultModal(false)}\r\n            >\r\n              Tutup\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <UsersIcon className=\"w-5 h-5\" />\r\n                Management User\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Kelola user dan akses sistem\r\n              </CardDescription>\r\n            </div>\r\n            <Button onClick={handleAddUser} className=\"bg-green-600 hover:bg-green-700\">\r\n              <Plus className=\"w-4 h-4 mr-2\" />\r\n              Tambah User\r\n            </Button>\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {/* Search */}\r\n          <div className=\"mb-6\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n              <Input\r\n                placeholder=\"Cari user...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Users Table */}\r\n          {loading ? (\r\n            <div className=\"flex items-center justify-center py-8\">\r\n              <Loader2 className=\"w-6 h-6 animate-spin mr-2 text-green-600\" />\r\n              <span>Loading users...</span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"border rounded-lg\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Nama</TableHead>\r\n                    <TableHead>Email</TableHead>\r\n                    <TableHead>Role</TableHead>\r\n                    <TableHead>Office ID</TableHead>\r\n                    <TableHead>Created At</TableHead>\r\n                    <TableHead className=\"text-right\">Aksi</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {filteredUsers.length === 0 ? (\r\n                    <TableRow>\r\n                      <TableCell colSpan={6} className=\"text-center py-8 text-gray-500\">\r\n                        {searchTerm ? 'Tidak ada user yang ditemukan' : 'Belum ada user'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ) : (\r\n                    filteredUsers.map((user) => (\r\n                      <TableRow key={user.id}>\r\n                        <TableCell className=\"font-medium\">{user.full_name}</TableCell>\r\n                        <TableCell>{user.email}</TableCell>\r\n                        <TableCell>\r\n                          <Badge className={getRoleBadgeColor(user.role)}>\r\n                            {user.role}\r\n                          </Badge>\r\n                        </TableCell>\r\n                        <TableCell>{user.office_id || '-'}</TableCell>\r\n                        <TableCell>\r\n                          {user.created_at ? new Date(user.created_at).toLocaleDateString('id-ID') : '-'}\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          <div className=\"flex items-center justify-end gap-2\">\r\n                            <Button\r\n                              variant=\"outline\"\r\n                              size=\"sm\"\r\n                              onClick={() => handleEditUser(user)}\r\n                            >\r\n                              <Edit className=\"w-4 h-4\" />\r\n                            </Button>\r\n                            <Button\r\n                              variant=\"outline\"\r\n                              size=\"sm\"\r\n                              onClick={() => handleDeleteUser(user)}\r\n                              className=\"text-red-600 hover:text-red-700\"\r\n                            >\r\n                              <Trash2 className=\"w-4 h-4\" />\r\n                            </Button>\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Add User Dialog */}\r\n      <Dialog open={showAddDialog} onOpenChange={setShowAddDialog}>\r\n         <DialogContent className=\"sm:max-w-md\">\r\n          <DialogHeader>\r\n            <DialogTitle>Tambah User Baru</DialogTitle>\r\n            <DialogDescription>\r\n              Masukkan informasi user yang akan ditambahkan ke sistem.\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <Label htmlFor=\"email\">Email</Label>\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={formData.email}\r\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n                placeholder=\"user@example.com\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <Label htmlFor=\"full_name\">Nama Lengkap</Label>\r\n              <Input\r\n                id=\"full_name\"\r\n                value={formData.full_name}\r\n                onChange={(e) => setFormData({ ...formData, full_name: e.target.value })}\r\n                placeholder=\"Nama lengkap user\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <Label htmlFor=\"password\">Password</Label>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"relative\">\r\n                  <Input\r\n                    id=\"password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={formData.password}\r\n                    onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  <div className=\"absolute right-0 top-0 h-full flex items-center gap-1 pr-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"ghost\"\r\n                      size=\"sm\"\r\n                      className=\"h-full px-2 hover:bg-transparent\"\r\n                      onClick={() => setShowPassword(!showPassword)}\r\n                    >\r\n                      {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n                    </Button>\r\n                    {formData.password && (\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        className=\"h-full px-2 hover:bg-transparent\"\r\n                        onClick={() => copyPasswordToClipboard(formData.password)}\r\n                      >\r\n                        {copiedPassword ? <Check className=\"h-4 w-4 text-green-600\" /> : <Copy className=\"h-4 w-4\" />}\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex gap-2\">\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={handleGeneratePassword}\r\n                    className=\"flex items-center gap-2 border-green-600 text-green-600 hover:bg-green-50\"\r\n                  >\r\n                    <RefreshCw className=\"h-4 w-4\" />\r\n                    Generate Password\r\n                  </Button>\r\n                  {formData.password && (\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outline\"\r\n                      size=\"sm\"\r\n                      onClick={() => copyPasswordToClipboard(formData.password)}\r\n                      className=\"flex items-center gap-2 border-blue-600 text-blue-600 hover:bg-blue-50\"\r\n                    >\r\n                      {copiedPassword ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\r\n                      {copiedPassword ? 'Disalin!' : 'Copy Password'}\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Label htmlFor=\"role\">Role</Label>\r\n              <Select value={formData.role} onValueChange={(value: 'admin' | 'operator' | 'user' | 'admin_wilayah') => setFormData({ ...formData, role: value })}>\r\n                <SelectTrigger>\r\n                  <SelectValue placeholder=\"Pilih role\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"user\">User</SelectItem>\r\n                  <SelectItem value=\"operator\">Operator</SelectItem>\r\n                  <SelectItem value=\"admin\">Admin</SelectItem>\r\n                  <SelectItem value=\"admin_wilayah\">Admin Wilayah</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n            <div>\r\n              <Label htmlFor=\"office_id\">Office ID</Label>\r\n              <Input\r\n                id=\"office_id\"\r\n                value={formData.office_id}\r\n                onChange={(e) => setFormData({ ...formData, office_id: e.target.value })}\r\n                placeholder=\"ID kantor (opsional)\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <DialogFooter>\r\n            <Button variant=\"outline\" onClick={() => setShowAddDialog(false)}>\r\n              Batal\r\n            </Button>\r\n            <Button \r\n              onClick={() => handleSubmit(false)}\r\n              disabled={isSubmitting || !formData.email || !formData.full_name || !formData.password}\r\n              className=\"bg-green-600 hover:bg-green-700\"\r\n            >\r\n              {isSubmitting ? <Loader2 className=\"w-4 h-4 animate-spin mr-2 text-white\" /> : null}\r\n              Tambah User\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Edit User Dialog */}\r\n      <Dialog open={showEditDialog} onOpenChange={setShowEditDialog}>\r\n        <DialogContent className=\"sm:max-w-md\">\r\n          <DialogHeader>\r\n            <DialogTitle>Edit User</DialogTitle>\r\n            <DialogDescription>\r\n              Perbarui informasi user.\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <Label htmlFor=\"edit-email\">Email</Label>\r\n              <Input\r\n                id=\"edit-email\"\r\n                type=\"email\"\r\n                value={formData.email}\r\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n                placeholder=\"user@example.com\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <Label htmlFor=\"edit-full_name\">Nama Lengkap</Label>\r\n              <Input\r\n                id=\"edit-full_name\"\r\n                value={formData.full_name}\r\n                onChange={(e) => setFormData({ ...formData, full_name: e.target.value })}\r\n                placeholder=\"Nama lengkap user\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <Label htmlFor=\"edit-password\">Password Baru (opsional)</Label>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"relative\">\r\n                  <Input\r\n                    id=\"edit-password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={formData.password}\r\n                    onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n                    placeholder=\"Kosongkan jika tidak ingin mengubah password\"\r\n                  />\r\n                  <div className=\"absolute right-0 top-0 h-full flex items-center gap-1 pr-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"ghost\"\r\n                      size=\"sm\"\r\n                      className=\"h-full px-2 hover:bg-transparent\"\r\n                      onClick={() => setShowPassword(!showPassword)}\r\n                    >\r\n                      {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n                    </Button>\r\n                    {formData.password && (\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        className=\"h-full px-2 hover:bg-transparent\"\r\n                        onClick={() => copyPasswordToClipboard(formData.password)}\r\n                      >\r\n                        {copiedPassword ? <Check className=\"h-4 w-4 text-green-600\" /> : <Copy className=\"h-4 w-4\" />}\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex gap-2\">\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={handleGeneratePassword}\r\n                    className=\"flex items-center gap-2 border-green-600 text-green-600 hover:bg-green-50\"\r\n                  >\r\n                    <RefreshCw className=\"h-4 w-4\" />\r\n                    Generate Password\r\n                  </Button>\r\n                  {formData.password && (\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outline\"\r\n                      size=\"sm\"\r\n                      onClick={() => copyPasswordToClipboard(formData.password)}\r\n                      className=\"flex items-center gap-2 border-blue-600 text-blue-600 hover:bg-blue-50\"\r\n                    >\r\n                      {copiedPassword ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\r\n                      {copiedPassword ? 'Disalin!' : 'Copy Password'}\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Label htmlFor=\"edit-role\">Role</Label>\r\n              <Select value={formData.role} onValueChange={(value: 'admin' | 'operator' | 'user' | 'admin_wilayah') => setFormData({ ...formData, role: value })}>\r\n                <SelectTrigger>\r\n                  <SelectValue placeholder=\"Pilih role\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"user\">User</SelectItem>\r\n                  <SelectItem value=\"operator\">Operator</SelectItem>\r\n                  <SelectItem value=\"admin\">Admin</SelectItem>\r\n                  <SelectItem value=\"admin_wilayah\">Admin Wilayah</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n            <div>\r\n              <Label htmlFor=\"edit-office_id\">Office ID</Label>\r\n              <Input\r\n                id=\"edit-office_id\"\r\n                value={formData.office_id}\r\n                onChange={(e) => setFormData({ ...formData, office_id: e.target.value })}\r\n                placeholder=\"ID kantor (opsional)\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <DialogFooter>\r\n            <Button variant=\"outline\" onClick={() => setShowEditDialog(false)}>\r\n              Batal\r\n            </Button>\r\n            <Button \r\n              onClick={() => handleSubmit(true)}\r\n              disabled={isSubmitting || !formData.email || !formData.full_name}\r\n              className=\"bg-green-600 hover:bg-green-700 text-white\"\r\n            >\r\n              {isSubmitting ? <Loader2 className=\"w-4 h-4 animate-spin mr-2 text-white\" /> : null}\r\n              Update User\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <AlertDialog open={showDeleteDialog} onOpenChange={setShowDeleteDialog}>\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader>\r\n            <AlertDialogTitle>Hapus User</AlertDialogTitle>\r\n            <AlertDialogDescription>\r\n              Apakah Anda yakin ingin menghapus user \"{selectedUser?.full_name}\"? \r\n              Tindakan ini tidak dapat dibatalkan.\r\n            </AlertDialogDescription>\r\n          </AlertDialogHeader>\r\n          <AlertDialogFooter>\r\n            <AlertDialogCancel>Batal</AlertDialogCancel>\r\n            <AlertDialogAction\r\n              onClick={handleDeleteConfirm}\r\n              disabled={isSubmitting}\r\n              className=\"bg-red-600 hover:bg-red-700\"\r\n            >\r\n              {isSubmitting ? <Loader2 className=\"w-4 h-4 animate-spin mr-2 text-white\" /> : null}\r\n              Hapus\r\n            </AlertDialogAction>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users; "],"names":["Users","user","token","useAuth","users","setUsers","useState","loading","setLoading","searchTerm","setSearchTerm","showAddDialog","setShowAddDialog","showEditDialog","setShowEditDialog","showDeleteDialog","setShowDeleteDialog","selectedUser","setSelectedUser","formData","setFormData","showPassword","setShowPassword","isSubmitting","setIsSubmitting","showAddUserResultModal","setShowAddUserResultModal","addUserSuccess","setAddUserSuccess","addUserMessage","setAddUserMessage","copiedPassword","setCopiedPassword","generateSecurePassword","charset","password","lowercase","uppercase","numbers","symbols","i","copyPasswordToClipboard","toast","textarea","successful","handleGeneratePassword","newPassword","jsx","Card","CardContent","jsxs","useEffect","fetchUsers","response","apiGet","error","handleAddUser","handleEditUser","handleDeleteUser","handleSubmit","isEdit","updateData","apiPut","apiPost","handleDeleteConfirm","apiDelete","filteredUsers","getRoleBadgeColor","role","CardHeader","CardTitle","UsersIcon","CardDescription","Button","Plus","Search","Input","e","Loader2","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","Badge","Edit","Trash2","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","EyeOff","Eye","Check","Copy","RefreshCw","Select","value","SelectTrigger","SelectValue","SelectContent","SelectItem","DialogFooter","AlertDialog","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction"],"mappings":"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"}