{"version":3,"file":"Dashboard-PrQP1MSe.js","sources":["../../src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { apiGet } from '../lib/api';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { FileText, TrendingUp, Clock, Users, ArrowRight, BarChart3, Calendar, Settings as SettingsIcon } from 'lucide-react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Table, TableHeader, TableBody, TableRow, TableHead, TableCell } from '@/components/ui/table';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\n\r\nconst Dashboard = () => {\r\n  const { user, token, loading } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [letters, setLetters] = useState<any[]>([]);\r\n  const [pengajuan, setPengajuan] = useState<any[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [loadingLetters, setLoadingLetters] = useState(false);\r\n  const [loadingPengajuan, setLoadingPengajuan] = useState(false);\r\n  const [search, setSearch] = useState('');\r\n  const filteredLetters = letters.filter(l =>\r\n    l.letter_number?.toLowerCase().includes(search.toLowerCase()) ||\r\n    l.subject?.toLowerCase().includes(search.toLowerCase()) ||\r\n    l.template_name?.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!loading && !user) {\r\n      navigate('/');\r\n    }\r\n  }, [user, loading, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (user && token) {\r\n      setLoadingLetters(true);\r\n      apiGet('/api/letters', token)\r\n        .then(res => setLetters(res.letters || []))\r\n        .catch(err => setError(err.message || 'Gagal fetch surat'))\r\n        .finally(() => setLoadingLetters(false));\r\n\r\n      setLoadingPengajuan(true);\r\n      apiGet('/api/pengajuan', token)\r\n        .then(res => setPengajuan(res.pengajuan || []))\r\n        .catch(() => setPengajuan([]))\r\n        .finally(() => setLoadingPengajuan(false));\r\n    }\r\n  }, [user, token]);\r\n\r\n  if (loading) return <div className=\"flex flex-col items-center justify-center min-h-screen\"><Skeleton className=\"h-8 w-1/2 mb-4\" /><Skeleton className=\"h-10 w-1/3 mb-2\" /><Skeleton className=\"h-10 w-1/3 mb-2\" /><Skeleton className=\"h-10 w-1/3 mb-2\" /></div>;\r\n\r\n  // Fungsi untuk menghitung perubahan persentase\r\n  const calculatePercentageChange = (current: number, previous: number) => {\r\n    if (previous === 0) return current > 0 ? '+100%' : '0%';\r\n    const change = ((current - previous) / previous) * 100;\r\n    return `${change >= 0 ? '+' : ''}${Math.round(change)}%`;\r\n  };\r\n\r\n  // Fungsi untuk mendapatkan data bulan lalu\r\n  const getLastMonthData = (data: any[], dateField: string) => {\r\n    const lastMonth = new Date();\r\n    lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n    return data.filter(item => {\r\n      const itemDate = new Date(item[dateField]);\r\n      return itemDate.getMonth() === lastMonth.getMonth() && \r\n             itemDate.getFullYear() === lastMonth.getFullYear();\r\n    });\r\n  };\r\n\r\n  // Fungsi untuk mendapatkan data bulan ini\r\n  const getCurrentMonthData = (data: any[], dateField: string) => {\r\n    const currentMonth = new Date();\r\n    return data.filter(item => {\r\n      const itemDate = new Date(item[dateField]);\r\n      return itemDate.getMonth() === currentMonth.getMonth() && \r\n             itemDate.getFullYear() === currentMonth.getFullYear();\r\n    });\r\n  };\r\n\r\n  // Data untuk perhitungan\r\n  const currentMonthLetters = getCurrentMonthData(letters, 'createdAt');\r\n  const lastMonthLetters = getLastMonthData(letters, 'createdAt');\r\n  const currentMonthPengajuan = getCurrentMonthData(pengajuan, 'createdAt');\r\n  const lastMonthPengajuan = getLastMonthData(pengajuan, 'createdAt');\r\n\r\n  // Statistik dinamis\r\n  const stats = [\r\n    {\r\n      title: 'Total Surat',\r\n      value: letters.length,\r\n      change: calculatePercentageChange(letters.length, lastMonthLetters.length),\r\n      icon: FileText,\r\n      color: 'text-blue-600'\r\n    },\r\n    {\r\n      title: 'Surat Bulan Ini',\r\n      value: currentMonthLetters.length,\r\n      change: calculatePercentageChange(currentMonthLetters.length, lastMonthLetters.length),\r\n      icon: TrendingUp,\r\n      color: 'text-green-600'\r\n    },\r\n    {\r\n      title: 'Pengajuan Aktif',\r\n      value: pengajuan.filter(p => p.status === 'active' || p.status === 'pending').length,\r\n      change: calculatePercentageChange(\r\n        pengajuan.filter(p => p.status === 'active' || p.status === 'pending').length,\r\n        lastMonthPengajuan.filter(p => p.status === 'active' || p.status === 'pending').length\r\n      ),\r\n      icon: Users,\r\n      color: 'text-purple-600'\r\n    },\r\n    {\r\n      title: 'Surat Pending',\r\n      value: letters.filter(l => l.status === 'draft').length,\r\n      change: calculatePercentageChange(\r\n        letters.filter(l => l.status === 'draft').length,\r\n        lastMonthLetters.filter(l => l.status === 'draft').length\r\n      ),\r\n      icon: Clock,\r\n      color: 'text-orange-600'\r\n    }\r\n  ];\r\n\r\n  // Jenis template dinamis dari surat yang ada\r\n  const templateTypes = Array.from(new Set(letters.map(l => l.template_name))).filter(Boolean);\r\n\r\n  const quickActions = [\r\n    {\r\n      title: 'Buat Surat Baru',\r\n      description: 'Mulai membuat surat dengan template yang tersedia',\r\n      icon: FileText,\r\n      href: '/generator',\r\n      color: 'bg-blue-500',\r\n      showForRoles: ['admin', 'operator'] // Only show for admin and operator\r\n    },\r\n    {\r\n      title: 'Pengajuan',\r\n      description: 'Buat pengajuan jabatan untuk pegawai',\r\n      icon: Users,\r\n      href: '/pengajuan/select',\r\n      color: 'bg-green-500',\r\n      showForRoles: ['admin', 'operator'] // Only show for admin and operator\r\n    },\r\n    {\r\n      title: 'Lihat Laporan',\r\n      description: 'Analisis penggunaan surat',\r\n      icon: BarChart3,\r\n      href: '/reports',\r\n      color: 'bg-purple-500',\r\n      showForRoles: ['admin', 'operator', 'user'] // Show for all roles\r\n    }\r\n  ];\r\n\r\n  // Helper badge status\r\n  const getStatusBadge = (status: string) => {\r\n    if (status === 'generated') return <Badge className=\"bg-green-100 text-green-700 border-green-200\">Generated</Badge>;\r\n    if (status === 'draft') return <Badge className=\"bg-orange-100 text-orange-700 border-orange-200\">Draft</Badge>;\r\n    if (status === 'signed') return <Badge className=\"bg-blue-100 text-blue-700 border-blue-200\">Signed</Badge>;\r\n    return <Badge className=\"bg-gray-100 text-gray-700 border-gray-200\">{status}</Badge>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">\r\n            Dashboard\r\n          </h1>\r\n          <p className=\"text-gray-600\">\r\n            Selamat datang, {user?.full_name || user?.email || 'User'} - {user?.role || 'Operator'}\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\r\n          <Calendar className=\"h-4 w-4\" />\r\n          <span>{new Date().toLocaleDateString('id-ID', {\r\n            weekday: 'long',\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric'\r\n          })}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {stats.map((stat, index) => {\r\n          const Icon = stat.icon;\r\n          return (\r\n            <Card key={index}>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium text-gray-600\">\r\n                  {stat.title}\r\n                </CardTitle>\r\n                <Icon className={`h-4 w-4 ${stat.color}`} />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold text-gray-900\">{stat.value}</div>\r\n                <p className=\"text-xs text-gray-500\">\r\n                  <span className=\"text-green-600\">{stat.change}</span> dari bulan lalu\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Quick Actions */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        {quickActions\r\n          .filter(action => action.showForRoles.includes(user?.role || ''))\r\n          .map((action, index) => {\r\n          const Icon = action.icon;\r\n          return (\r\n            <Card key={index} className=\"hover:shadow-md transition-shadow cursor-pointer\">\r\n              <CardHeader>\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className={`p-2 rounded-lg ${action.color}`}>\r\n                    <Icon className=\"h-5 w-5 text-white\" />\r\n                  </div>\r\n                  <div>\r\n                    <CardTitle className=\"text-lg\">{action.title}</CardTitle>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p className=\"text-gray-600 mb-4\">{action.description}</p>\r\n                <Button asChild variant=\"outline\" className=\"w-full\">\r\n                  <Link to={action.href}>\r\n                    Akses <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n                  </Link>\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Recent Templates (ubah jadi Jenis Template) */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2\"><FileText className=\"w-5 h-5 text-green-700\" /> Jenis Template</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-3\">\r\n              {templateTypes.length === 0 ? (\r\n                <div className=\"text-center text-gray-500\">Belum ada template surat</div>\r\n              ) : (\r\n                templateTypes.map((name, idx) => (\r\n                  <div key={idx} className=\"flex items-center gap-2 p-2 bg-gray-50 rounded-lg\">\r\n                    <FileText className=\"w-4 h-4 text-green-600\" />\r\n                    <span className=\"font-medium text-gray-900\">{name}</span>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        {/* Template Terbaru diganti, atau bisa dihapus jika tidak perlu */}\r\n      </div>\r\n\r\n      {/* Tabel Surat Terbaru (tambah link ke detail surat) */}\r\n      <Card className=\"mb-4\">\r\n        <CardHeader>\r\n          <CardTitle className=\"text-xl font-semibold\">Daftar Surat</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-2 mb-2\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input input-bordered w-full md:w-64\"\r\n              placeholder=\"Cari nomor, perihal, atau template...\"\r\n              value={search}\r\n              onChange={e => setSearch(e.target.value)}\r\n            />\r\n          </div>\r\n          {loadingLetters ? (\r\n            <div>Loading surat...</div>\r\n          ) : error ? (\r\n            <div className=\"text-error\">{error}</div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>No.</TableHead>\r\n                    <TableHead>Nomor Surat</TableHead>\r\n                    <TableHead>Perihal</TableHead>\r\n                    <TableHead>Status</TableHead>\r\n                    <TableHead>Aksi</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {filteredLetters.length === 0 ? (\r\n                    <TableRow>\r\n                      <TableCell colSpan={5} className=\"text-center\">Tidak ada surat</TableCell>\r\n                    </TableRow>\r\n                  ) : (\r\n                    filteredLetters.slice(0, 5).map((l, i) => (\r\n                      <TableRow key={l.id}>\r\n                        <TableCell>{i + 1}</TableCell>\r\n                        <TableCell>{l.letter_number}</TableCell>\r\n                        <TableCell>{l.subject}</TableCell>\r\n                        <TableCell>{getStatusBadge(l.status)}</TableCell>\r\n                        <TableCell>\r\n                          <Link to={`/letters/${l.id}`} className=\"btn btn-xs btn-outline flex items-center gap-1\">\r\n                            <FileText className=\"w-4 h-4\" /> Detail\r\n                          </Link>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["Dashboard","user","token","loading","useAuth","navigate","useNavigate","letters","setLetters","useState","pengajuan","setPengajuan","error","setError","loadingLetters","setLoadingLetters","loadingPengajuan","setLoadingPengajuan","search","setSearch","filteredLetters","l","_a","_b","_c","useEffect","apiGet","res","err","jsxs","jsx","Skeleton","calculatePercentageChange","current","previous","change","getLastMonthData","data","dateField","lastMonth","item","itemDate","getCurrentMonthData","currentMonth","currentMonthLetters","lastMonthLetters","lastMonthPengajuan","stats","FileText","TrendingUp","p","Users","Clock","templateTypes","quickActions","BarChart3","getStatusBadge","status","Badge","Calendar","stat","index","Icon","Card","CardHeader","CardTitle","CardContent","action","Button","Link","ArrowRight","name","idx","e","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","i"],"mappings":"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"}