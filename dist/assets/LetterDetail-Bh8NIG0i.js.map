{"version":3,"file":"LetterDetail-Bh8NIG0i.js","sources":["../../src/pages/LetterDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { apiGet } from '@/lib/api';\r\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { FileText, ArrowLeft } from 'lucide-react';\r\nimport { Template1 } from '@/components/templates/Template1';\r\nimport { Template2 } from '@/components/templates/Template2';\r\nimport { Template3 } from '@/components/templates/Template3';\r\nimport { Template4 } from '@/components/templates/Template4';\r\nimport { Template5 } from '@/components/templates/Template5';\r\nimport { Template6 } from '@/components/templates/Template6';\r\nimport { Template7 } from '@/components/templates/Template7';\r\nimport { Template8 } from '@/components/templates/Template8';\r\nimport { Template9 } from '@/components/templates/Template9';\r\nimport { apiPost } from '@/lib/api';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\r\nimport SuratPreviewContainer from '@/components/SuratPreviewContainer';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\n\r\nconst LetterDetail: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const { token } = useAuth();\r\n  const [letter, setLetter] = useState<any>(null);\r\n  const [pegawaiLetters, setPegawaiLetters] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedBatch, setSelectedBatch] = useState<string[]>([]);\r\n  const { toast } = useToast();\r\n\r\n  useEffect(() => {\r\n    if (!token || !id) return;\r\n    setLoading(true);\r\n    apiGet(`/api/letters/${id}`, token)\r\n      .then(res => {\r\n        setLetter(res.letter);\r\n        if (res.letter?.recipient_employee_nip) {\r\n          apiGet(`/api/letters?recipient_employee_nip=${res.letter.recipient_employee_nip}`, token)\r\n            .then(r2 => setPegawaiLetters(r2.letters || []));\r\n        }\r\n      })\r\n      .catch(() => setError('Surat tidak ditemukan'))\r\n      .finally(() => setLoading(false));\r\n  }, [id, token]);\r\n\r\n  if (loading) return <div className=\"flex justify-center items-center min-h-screen\"><Skeleton className=\"h-10 w-1/2\" /><Skeleton className=\"h-96 w-full mt-8\" /></div>;\r\n  if (error || !letter) return <div className=\"flex flex-col items-center justify-center min-h-screen\"><div className=\"text-error mb-4\">{error || 'Surat tidak ditemukan'}</div><Link to=\"/dashboard\" className=\"btn btn-primary\">Kembali ke Dashboard</Link></div>;\r\n\r\n  // Parse form_data jika string\r\n  let parsedFormData = letter.form_data;\r\n  if (typeof parsedFormData === 'string') {\r\n    try {\r\n      parsedFormData = JSON.parse(parsedFormData);\r\n    } catch {\r\n      parsedFormData = {};\r\n    }\r\n  }\r\n\r\n  const renderPreviewByTemplate = (letter: any) => {\r\n    let data = letter.form_data;\r\n    if (typeof data === 'string') {\r\n      try {\r\n        data = JSON.parse(data);\r\n      } catch {\r\n        data = {};\r\n      }\r\n    }\r\n    // Gabungkan data dengan office dan kode_kabko, serta field root letter\r\n    data = {\r\n      ...data,\r\n      office: letter.office,\r\n      kode_kabko: letter.office?.kode_kabko || data.kode_kabko,\r\n      letter_number: letter.letter_number,\r\n      // Gabungkan semua field root letter yang relevan\r\n      ...letter,\r\n    };\r\n    if (!data) return <div className=\"text-error\">Data surat tidak ditemukan</div>;\r\n    if (String(letter.template_id) === '1') return <SuratPreviewContainer><Template1 data={data} /></SuratPreviewContainer>;\r\n    if (String(letter.template_id) === '2') return <SuratPreviewContainer><Template2 data={data} /></SuratPreviewContainer>;\r\n    if (String(letter.template_id) === '3') return <SuratPreviewContainer><Template3 data={data} /></SuratPreviewContainer>;\r\n    if (String(letter.template_id) === '4') return <SuratPreviewContainer><Template4 data={data} /></SuratPreviewContainer>;\r\n    if (String(letter.template_id) === '5') return <SuratPreviewContainer><Template5 data={data} /></SuratPreviewContainer>;\r\n    if (String(letter.template_id) === '6') return <SuratPreviewContainer><Template6 data={data} /></SuratPreviewContainer>;\r\n    if (String(letter.template_id) === '7') return <SuratPreviewContainer><Template7 data={data} /></SuratPreviewContainer>;\r\n    if (String(letter.template_id) === '8') return <SuratPreviewContainer><Template8 data={data} /></SuratPreviewContainer>;\r\n    if (String(letter.template_id) === '9') return <SuratPreviewContainer><Template9 data={data} /></SuratPreviewContainer>;\r\n    return <div className=\"text-error\">Template tidak dikenali</div>;\r\n  };\r\n\r\n  const handleBatchGeneratePDF = async () => {\r\n    if (!token) return;\r\n    if (selectedBatch.length === 0) return;\r\n    toast({ title: 'Memulai generate PDF batch...', description: `${selectedBatch.length} surat diproses.` });\r\n    let success = 0, fail = 0;\r\n    for (const sid of selectedBatch) {\r\n      try {\r\n        await apiPost(`/api/letters/${sid}/generate-pdf`, {}, token);\r\n        success++;\r\n      } catch {\r\n        fail++;\r\n      }\r\n    }\r\n    toast({ title: 'Batch PDF selesai', description: `${success} sukses, ${fail} gagal.` });\r\n    setSelectedBatch([]);\r\n  };\r\n\r\n  // Filter surat pegawai hanya yang NIP-nya sama\r\n  const filteredPegawaiLetters = pegawaiLetters.filter(l => l.recipient_employee_nip === letter.recipient_employee_nip);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"max-w-6xl mx-auto p-4 md:p-8 space-y-8\">\r\n        <div className=\"flex items-center space-x-2 mb-4\">\r\n          <Button asChild variant=\"outline\" size=\"sm\">\r\n            <Link to=\"/dashboard\"><ArrowLeft className=\"w-4 h-4 mr-1\" /> Kembali</Link>\r\n          </Button>\r\n          <h1 className=\"text-2xl font-bold flex items-center gap-2\"><FileText className=\"w-6 h-6 text-green-700\" /> Detail Surat</h1>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n          {/* Info Surat */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Informasi Surat</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-2\">\r\n              <div><span className=\"font-semibold\">Nomor Surat:</span> {letter.letter_number}</div>\r\n              <div><span className=\"font-semibold\">Tanggal:</span> {parsedFormData.tanggal}</div>\r\n              <div><span className=\"font-semibold\">Template:</span> {letter.template_name}</div>\r\n              <div><span className=\"font-semibold\">Status:</span> <Badge>{letter.status}</Badge></div>\r\n              <div><span className=\"font-semibold\">Pegawai:</span> {parsedFormData.namapegawai} ({letter.recipient_employee_nip})</div>\r\n              <div><span className=\"font-semibold\">Pejabat Penandatangan:</span> {parsedFormData.namapejabat} ({letter.signing_official_nip})</div>\r\n              <div><span className=\"font-semibold\">Unit Kerja Pegawai:</span> {parsedFormData.unitkerja || parsedFormData.ukerpegawai}</div>\r\n              <div><span className=\"font-semibold\">Jabatan Pegawai:</span> {parsedFormData.jabatanpegawai}</div>\r\n              <div><span className=\"font-semibold\">Pangkat/Golongan Pegawai:</span> {parsedFormData.pangkatgolpegawai}</div>\r\n              {/* Tombol Generate PDF */}\r\n              <div className=\"pt-4\">\r\n                <Button onClick={async () => {\r\n                  await apiPost(`/api/letters/${letter.id}/generate-pdf`, {}, token);\r\n                  toast({ title: 'PDF berhasil digenerate', description: 'Silakan cek file surat.' });\r\n                }}>\r\n                  Generate PDF\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n          {/* Preview Surat */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Preview Surat</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"overflow-x-auto max-h-[500px]\">\r\n                {renderPreviewByTemplate(letter)}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n        {/* Tabel Surat Pegawai */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Daftar Surat Pegawai Ini</CardTitle>\r\n            {selectedBatch.length > 0 && (\r\n              <Button className=\"mt-2\" onClick={handleBatchGeneratePDF}>\r\n                Generate PDF Batch ({selectedBatch.length})\r\n              </Button>\r\n            )}\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"overflow-x-auto\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead></TableHead>\r\n                    <TableHead>No.</TableHead>\r\n                    <TableHead>Nomor Surat</TableHead>\r\n                    <TableHead>Template</TableHead>\r\n                    <TableHead>Tanggal</TableHead>\r\n                    <TableHead>Status</TableHead>\r\n                    <TableHead>Aksi</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {filteredPegawaiLetters.length === 0 ? (\r\n                    <TableRow><TableCell colSpan={7} className=\"text-center\">Tidak ada surat lain</TableCell></TableRow>\r\n                  ) : (\r\n                    filteredPegawaiLetters.map((l, i) => (\r\n                      <TableRow key={l.id} className={l.id === letter.id ? 'bg-green-50 font-semibold' : ''}>\r\n                        <TableCell>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={selectedBatch.includes(l.id)}\r\n                            onChange={e => {\r\n                              if (e.target.checked) setSelectedBatch([...selectedBatch, l.id]);\r\n                              else setSelectedBatch(selectedBatch.filter(id => id !== l.id));\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>{i + 1}</TableCell>\r\n                        <TableCell>{l.letter_number}</TableCell>\r\n                        <TableCell>{l.template_name}</TableCell>\r\n                        <TableCell>{typeof l.form_data === 'string' ? (() => { try { return JSON.parse(l.form_data).tanggal } catch { return '-' } })() : l.form_data?.tanggal}</TableCell>\r\n                        <TableCell><Badge>{l.status}</Badge></TableCell>\r\n                        <TableCell>\r\n                          {l.id !== letter.id && (\r\n                            <Link to={`/letters/${l.id}`} className=\"btn btn-xs btn-outline\">Lihat</Link>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LetterDetail; "],"names":["LetterDetail","id","useParams","token","useAuth","letter","setLetter","useState","pegawaiLetters","setPegawaiLetters","loading","setLoading","error","setError","selectedBatch","setSelectedBatch","toast","useToast","useEffect","apiGet","res","_a","r2","jsxs","jsx","Skeleton","Link","parsedFormData","renderPreviewByTemplate","data","SuratPreviewContainer","Template1","Template2","Template3","Template4","Template5","Template6","Template7","Template8","Template9","handleBatchGeneratePDF","success","fail","sid","apiPost","filteredPegawaiLetters","l","Fragment","Button","ArrowLeft","FileText","Card","CardHeader","CardTitle","CardContent","Badge","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","i","e"],"mappings":"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"}