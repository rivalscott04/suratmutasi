{"version":3,"file":"Index-vrmECyM_.js","sources":["../../src/pages/Index.tsx"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Eye, EyeOff, Loader2, CheckCircle, XCircle } from 'lucide-react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from '@/components/ui/dialog';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n  const [showErrorModal, setShowErrorModal] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const { login, isAuthenticated } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  // Redirect if already authenticated\r\n  React.useEffect(() => {\r\n    if (isAuthenticated) {\r\n      navigate('/dashboard');\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    // Prevent multiple submissions\r\n    if (isLoading) return;\r\n    \r\n    // Reset states before submission\r\n    setIsLoading(true);\r\n    setShowErrorModal(false);\r\n    setShowSuccessModal(false);\r\n\r\n    try {\r\n      await login(email, password);\r\n      setShowSuccessModal(true);\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      setErrorMessage('Email atau password yang Anda masukkan tidak sesuai. Silakan periksa kembali kredensial Anda.');\r\n      // Use setTimeout to ensure state update happens after current execution\r\n      setTimeout(() => {\r\n        setShowErrorModal(true);\r\n      }, 0);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-green-50 to-blue-50 flex items-center justify-center p-4\">\r\n      <Card className=\"w-full max-w-md shadow-xl relative z-10\">\r\n        <CardHeader className=\"text-center space-y-4\">\r\n          <div className=\"flex justify-center\">\r\n            <img\r\n              src={import.meta.env.BASE_URL + 'logo-kemenag.png'}\r\n              alt=\"Logo Kementerian Agama\"\r\n              className=\"w-16 h-16 object-contain\"\r\n            />\r\n          </div>\r\n          <CardTitle className=\"text-2xl font-bold text-gray-900\">\r\n            Si Imut â€” Sistem Informasi Mutasi\r\n          </CardTitle>\r\n          <CardDescription className=\"text-base text-gray-600\">\r\n            Kanwil Kemenag Provinsi NTB\r\n          </CardDescription>\r\n        </CardHeader>\r\n        \r\n        <CardContent>\r\n          <form onSubmit={handleSubmit} className=\"space-y-4 relative\" onKeyDown={(e) => {\r\n            // Prevent any default browser behavior that might interfere\r\n            if (e.key === 'Enter' && isLoading) {\r\n              e.preventDefault();\r\n            }\r\n          }}>\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"email\">Email</Label>\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"nama@kemenag.go.id\"\r\n                required\r\n                className=\"h-11 relative z-20\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"password\">Password</Label>\r\n              <div className=\"relative\">\r\n                <Input\r\n                  id=\"password\"\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  placeholder=\"Masukkan password\"\r\n                  required\r\n                  className=\"h-11 pr-10 relative z-20\"\r\n                  autoComplete=\"current-password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700 transition-colors z-30\"\r\n                  tabIndex={-1}\r\n                >\r\n                  {showPassword ? (\r\n                    <EyeOff className=\"h-4 w-4\" />\r\n                  ) : (\r\n                    <Eye className=\"h-4 w-4\" />\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"w-full h-11 text-base font-medium bg-green-600 hover:bg-green-700 text-white relative z-20 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              disabled={isLoading || !email || !password}\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                  Sedang masuk...\r\n                </>\r\n              ) : (\r\n                'Masuk'\r\n              )}\r\n            </Button>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Success Modal */}\r\n      <Dialog open={showSuccessModal} onOpenChange={setShowSuccessModal}>\r\n        <DialogContent className=\"sm:max-w-md\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"flex items-center gap-2\">\r\n              <CheckCircle className=\"w-5 h-5 text-green-500\" />\r\n              Login Berhasil\r\n            </DialogTitle>\r\n            <DialogDescription>\r\n              Selamat datang kembali! Anda akan dialihkan ke dashboard.\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <div className=\"flex justify-end\">\r\n            <Button \r\n              onClick={() => {\r\n                setShowSuccessModal(false);\r\n                navigate('/dashboard');\r\n              }}\r\n              className=\"bg-green-600 hover:bg-green-700 text-white\"\r\n            >\r\n              Lanjutkan\r\n            </Button>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Error Modal */}\r\n      <Dialog open={showErrorModal} onOpenChange={(open) => {\r\n        // Only allow closing via buttons, not by clicking outside\r\n        if (!open) {\r\n          setShowErrorModal(false);\r\n        }\r\n      }}>\r\n        <DialogContent className=\"sm:max-w-md\" onPointerDownOutside={(e) => e.preventDefault()}>\r\n          <DialogHeader>\r\n            <DialogTitle className=\"flex items-center gap-2 text-red-600\">\r\n              <XCircle className=\"w-6 h-6 text-red-500\" />\r\n              Login Gagal\r\n            </DialogTitle>\r\n            <DialogDescription className=\"text-left space-y-3\">\r\n              <p className=\"text-red-600 font-medium\">\r\n                {errorMessage}\r\n              </p>\r\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 space-y-2\">\r\n                <p className=\"text-sm text-red-700 font-medium\">Saran untuk mengatasi masalah:</p>\r\n                <ul className=\"text-sm text-red-600 space-y-1 list-disc list-inside\">\r\n                  <li>Pastikan email yang dimasukkan sudah benar</li>\r\n                  <li>Periksa kembali password Anda</li>\r\n                  <li>Pastikan Caps Lock tidak aktif</li>\r\n                  <li>Hubungi admin jika masalah berlanjut</li>\r\n                </ul>\r\n              </div>\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <div className=\"flex justify-end space-x-2\">\r\n            <Button \r\n              onClick={() => {\r\n                setShowErrorModal(false);\r\n                setPassword(''); // Clear password field\r\n              }}\r\n              variant=\"outline\"\r\n              className=\"border-red-200 text-red-600 hover:bg-red-50\"\r\n            >\r\n              Coba Lagi\r\n            </Button>\r\n            <Button \r\n              onClick={() => setShowErrorModal(false)}\r\n              className=\"bg-red-600 hover:bg-red-700 text-white\"\r\n            >\r\n              Tutup\r\n            </Button>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","email","setEmail","useState","password","setPassword","showPassword","setShowPassword","isLoading","setIsLoading","showSuccessModal","setShowSuccessModal","showErrorModal","setShowErrorModal","errorMessage","setErrorMessage","login","isAuthenticated","useAuth","navigate","useNavigate","React","handleSubmit","e","error","jsxs","Card","CardHeader","jsx","CardTitle","CardDescription","CardContent","Label","Input","EyeOff","Eye","Button","Fragment","Loader2","Dialog","DialogContent","DialogHeader","DialogTitle","CheckCircle","DialogDescription","open","XCircle"],"mappings":"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"}