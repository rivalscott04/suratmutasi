{"version":3,"file":"Dashboard-DugxC2co.js","sources":["../../src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { apiGet } from '../lib/api';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { FileText, TrendingUp, Clock, Users, ArrowRight, BarChart3, Calendar, Settings as SettingsIcon, RefreshCw, Download } from 'lucide-react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Table, TableHeader, TableBody, TableRow, TableHead, TableCell } from '@/components/ui/table';\r\nimport * as XLSX from 'xlsx';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\nimport { PageHeader } from '@/components/PageHeader';\r\nimport { showSuccess, showError, showSaveSuccess, showSaveError } from '@/lib/messageUtils';\r\n\r\nconst Dashboard = () => {\r\n  const { user, token, loading } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [letters, setLetters] = useState<any[]>([]);\r\n  const [pengajuan, setPengajuan] = useState<any[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [loadingLetters, setLoadingLetters] = useState(false);\r\n  const [loadingPengajuan, setLoadingPengajuan] = useState(false);\r\n  const [search, setSearch] = useState('');\r\n  // Rekap (Superadmin & Admin Wilayah scope-aware via backend)\r\n  const [rekapAggregation, setRekapAggregation] = useState<Array<{ kabupaten: string; total: number; statuses: { status: string; count: number }[] }>>([]);\r\n  const [rekapLoading, setRekapLoading] = useState(false);\r\n  const [exporting, setExporting] = useState(false);\r\n  const filteredLetters = letters.filter(l =>\r\n    l.letter_number?.toLowerCase().includes(search.toLowerCase()) ||\r\n    l.subject?.toLowerCase().includes(search.toLowerCase()) ||\r\n    l.template_name?.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!loading && !user) {\r\n      navigate('/');\r\n    }\r\n  }, [user, loading, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (user && token) {\r\n      setLoadingLetters(true);\r\n      apiGet('/api/letters', token)\r\n        .then(res => setLetters(res.letters || []))\r\n        .catch(err => setError(err.message || 'Gagal fetch surat'))\r\n        .finally(() => setLoadingLetters(false));\r\n\r\n      setLoadingPengajuan(true);\r\n      apiGet('/api/pengajuan', token)\r\n        .then(res => setPengajuan(res.pengajuan || []))\r\n        .catch(() => setPengajuan([]))\r\n        .finally(() => setLoadingPengajuan(false));\r\n\r\n      // Fetch rekap for dashboard (show to admin/superadmin, also works for admin_wilayah with scoped data)\r\n      const fetchRekap = async () => {\r\n        try {\r\n          setRekapLoading(true);\r\n          const res = await apiGet('/api/pengajuan/rekap/aggregate', token);\r\n          const agg = res?.data?.aggregation || res?.aggregation || [];\r\n          setRekapAggregation(Array.isArray(agg) ? agg : []);\r\n        } catch (e) {\r\n          setRekapAggregation([]);\r\n        } finally {\r\n          setRekapLoading(false);\r\n        }\r\n      };\r\n      fetchRekap();\r\n    }\r\n  }, [user, token]);\r\n\r\n  if (loading) return <div className=\"flex flex-col items-center justify-center min-h-screen\"><Skeleton className=\"h-8 w-1/2 mb-4\" /><Skeleton className=\"h-10 w-1/3 mb-2\" /><Skeleton className=\"h-10 w-1/3 mb-2\" /><Skeleton className=\"h-10 w-1/3 mb-2\" /></div>;\r\n\r\n  // Fungsi untuk menghitung perubahan persentase\r\n  const calculatePercentageChange = (current: number, previous: number) => {\r\n    if (previous === 0) return current > 0 ? '+100%' : '0%';\r\n    const change = ((current - previous) / previous) * 100;\r\n    return `${change >= 0 ? '+' : ''}${Math.round(change)}%`;\r\n  };\r\n\r\n  // Fungsi untuk mendapatkan data bulan lalu\r\n  const getLastMonthData = (data: any[], dateField: string) => {\r\n    const lastMonth = new Date();\r\n    lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n    return data.filter(item => {\r\n      const itemDate = new Date(item[dateField]);\r\n      return itemDate.getMonth() === lastMonth.getMonth() && \r\n             itemDate.getFullYear() === lastMonth.getFullYear();\r\n    });\r\n  };\r\n\r\n  // Fungsi untuk mendapatkan data bulan ini\r\n  const getCurrentMonthData = (data: any[], dateField: string) => {\r\n    const currentMonth = new Date();\r\n    return data.filter(item => {\r\n      const itemDate = new Date(item[dateField]);\r\n      return itemDate.getMonth() === currentMonth.getMonth() && \r\n             itemDate.getFullYear() === currentMonth.getFullYear();\r\n    });\r\n  };\r\n\r\n  // Data untuk perhitungan\r\n  const currentMonthLetters = getCurrentMonthData(letters, 'createdAt');\r\n  const lastMonthLetters = getLastMonthData(letters, 'createdAt');\r\n  const currentMonthPengajuan = getCurrentMonthData(pengajuan, 'createdAt');\r\n  const lastMonthPengajuan = getLastMonthData(pengajuan, 'createdAt');\r\n\r\n  const getStatusLabel = (status: string) => {\r\n    const statusConfig = {\r\n      draft: 'Draf',\r\n      submitted: 'Diajukan',\r\n      approved: 'Disetujui',\r\n      rejected: 'Ditolak',\r\n      resubmitted: 'Diajukan Ulang',\r\n      admin_wilayah_approved: 'Disetujui Admin Wilayah',\r\n      admin_wilayah_rejected: 'Ditolak Admin Wilayah',\r\n      final_approved: 'Selesai',\r\n      final_rejected: 'Ditolak Final',\r\n    };\r\n\r\n    return statusConfig[status as keyof typeof statusConfig] || status.toUpperCase();\r\n  };\r\n\r\n  const exportExcel = async () => {\r\n    setExporting(true);\r\n    try {\r\n      // Ambil semua data pengajuan dengan pagination\r\n      let allPengajuanData: any[] = [];\r\n      let page = 1;\r\n      let hasMore = true;\r\n      \r\n      while (hasMore) {\r\n        const res = await apiGet(`/api/pengajuan?page=${page}&limit=100`, token);\r\n        const pageData = res.data || res.pengajuan || [];\r\n        \r\n        if (pageData.length === 0) {\r\n          hasMore = false;\r\n        } else {\r\n          allPengajuanData = [...allPengajuanData, ...pageData];\r\n          page++;\r\n        }\r\n      }\r\n      \r\n      const pengajuanData = allPengajuanData;\r\n\r\n      // Sheet 1: Data Detail per Pengajuan\r\n      const detailData = pengajuanData.map((item: any) => ({\r\n        'Nama': item.pegawai?.nama || '-',\r\n        'Status': getStatusLabel(item.status),\r\n        'Kabupaten/Kota': item.office?.kabkota || item.office?.name || '-'\r\n      }));\r\n\r\n      // Sheet 2: Summary per Kabupaten\r\n      const summaryData = rekapAggregation.map(row => {\r\n        const countByStatus = row.statuses.reduce((acc, s) => { \r\n          acc[s.status] = s.count; \r\n          return acc; \r\n        }, {} as Record<string, number>);\r\n\r\n        return {\r\n          'Kabupaten/Kota': row.kabupaten,\r\n          'Draf': countByStatus['draft'] || 0,\r\n          'Diajukan': countByStatus['submitted'] || 0,\r\n          'Disetujui': countByStatus['approved'] || 0,\r\n          'Ditolak': countByStatus['rejected'] || 0,\r\n          'Diajukan Ulang': countByStatus['resubmitted'] || 0,\r\n          'Disetujui Admin Wilayah': countByStatus['admin_wilayah_approved'] || 0,\r\n          'Ditolak Admin Wilayah': countByStatus['admin_wilayah_rejected'] || 0,\r\n          'Selesai': countByStatus['final_approved'] || 0,\r\n          'Ditolak Final': countByStatus['final_rejected'] || 0,\r\n          'Total': row.total\r\n        };\r\n      });\r\n\r\n      // Buat workbook dengan 2 sheet\r\n      const wb = XLSX.utils.book_new();\r\n      \r\n      // Sheet 1: Data Detail\r\n      const ws1 = XLSX.utils.json_to_sheet(detailData);\r\n      XLSX.utils.book_append_sheet(wb, ws1, 'Data Detail Pengajuan');\r\n      \r\n      // Sheet 2: Summary per Kabupaten\r\n      const ws2 = XLSX.utils.json_to_sheet(summaryData);\r\n      XLSX.utils.book_append_sheet(wb, ws2, 'Rekap per Kabupaten');\r\n\r\n      // Generate filename dengan timestamp\r\n      const now = new Date();\r\n      const timestamp = `${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, '0')}${String(now.getDate()).padStart(2, '0')}_${String(now.getHours()).padStart(2, '0')}${String(now.getMinutes()).padStart(2, '0')}`;\r\n      const roleLabel = (user?.role === 'user') ? 'AdminPusat' : 'Superadmin';\r\n      const filename = `Rekap_Status_${roleLabel}_${timestamp}.xlsx`;\r\n\r\n      // Download file\r\n      XLSX.writeFile(wb, filename);\r\n    } catch (error) {\r\n      console.error('Error exporting Excel:', error);\r\n    } finally {\r\n      setExporting(false);\r\n    }\r\n  };\r\n\r\n  // Statistik dinamis\r\n  const stats = [\r\n    {\r\n      title: 'Total Surat',\r\n      value: letters.length,\r\n      change: calculatePercentageChange(letters.length, lastMonthLetters.length),\r\n      icon: FileText,\r\n      color: 'text-blue-600'\r\n    },\r\n    {\r\n      title: 'Surat Bulan Ini',\r\n      value: currentMonthLetters.length,\r\n      change: calculatePercentageChange(currentMonthLetters.length, lastMonthLetters.length),\r\n      icon: TrendingUp,\r\n      color: 'text-green-600'\r\n    },\r\n    {\r\n      title: 'Pengajuan Terbaru',\r\n      value: pengajuan.filter(p => p.status === 'submitted' && p.files?.some(f => f.file_category === 'admin_wilayah')).length,\r\n      change: calculatePercentageChange(\r\n        pengajuan.filter(p => p.status === 'submitted' && p.files?.some(f => f.file_category === 'admin_wilayah')).length,\r\n        lastMonthPengajuan.filter(p => p.status === 'submitted' && p.files?.some(f => f.file_category === 'admin_wilayah')).length\r\n      ),\r\n      icon: Users,\r\n      color: 'text-purple-600'\r\n    },\r\n    {\r\n      title: 'Surat Pending',\r\n      value: letters.filter(l => l.status === 'draft').length,\r\n      change: calculatePercentageChange(\r\n        letters.filter(l => l.status === 'draft').length,\r\n        lastMonthLetters.filter(l => l.status === 'draft').length\r\n      ),\r\n      icon: Clock,\r\n      color: 'text-orange-600'\r\n    }\r\n  ];\r\n\r\n  // Jenis template dinamis dari surat yang ada\r\n  const templateTypes = Array.from(new Set(letters.map(l => l.template_name))).filter(Boolean);\r\n\r\n  const quickActions = [\r\n    {\r\n      title: 'Buat Surat Baru',\r\n      description: 'Mulai membuat surat dengan template yang tersedia',\r\n      icon: FileText,\r\n      href: '/generator',\r\n      color: 'bg-blue-500',\r\n      showForRoles: ['admin', 'operator'] // Only show for admin and operator\r\n    },\r\n    {\r\n      title: 'Pengajuan',\r\n      description: 'Buat pengajuan jabatan untuk pegawai',\r\n      icon: Users,\r\n      href: '/pengajuan/select',\r\n      color: 'bg-green-500',\r\n      showForRoles: ['admin', 'operator'] // Only show for admin and operator\r\n    },\r\n    {\r\n      title: 'Lihat Laporan',\r\n      description: 'Analisis penggunaan surat',\r\n      icon: BarChart3,\r\n      href: '/reports',\r\n      color: 'bg-purple-500',\r\n      showForRoles: ['admin', 'operator', 'user'] // Show for all roles\r\n    }\r\n  ];\r\n\r\n  // Helper badge status\r\n  const getStatusBadge = (status: string) => {\r\n    if (status === 'generated') return <Badge className=\"bg-green-100 text-green-700 border-green-200\">Generated</Badge>;\r\n    if (status === 'draft') return <Badge className=\"bg-orange-100 text-orange-700 border-orange-200\">Draft</Badge>;\r\n    if (status === 'signed') return <Badge className=\"bg-blue-100 text-blue-700 border-blue-200\">Signed</Badge>;\r\n    return <Badge className=\"bg-gray-100 text-gray-700 border-gray-200\">{status}</Badge>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header with Breadcrumb */}\r\n      <PageHeader\r\n        title={user?.role === 'user' ? 'Dashboard Admin Pusat' : 'Dashboard'}\r\n        subtitle={`Selamat datang, ${user?.full_name || user?.email || 'User'} - ${user?.role || 'Operator'}`}\r\n        showBreadcrumb={false}\r\n        actions={\r\n          <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\r\n            <Calendar className=\"h-4 w-4\" />\r\n            <span>{new Date().toLocaleDateString('id-ID', {\r\n              weekday: 'long',\r\n              year: 'numeric',\r\n              month: 'long',\r\n              day: 'numeric'\r\n            })}</span>\r\n          </div>\r\n        }\r\n      />\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {stats.map((stat, index) => {\r\n          const Icon = stat.icon;\r\n          return (\r\n            <Card key={index}>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium text-gray-600\">\r\n                  {stat.title}\r\n                </CardTitle>\r\n                <Icon className={`h-4 w-4 ${stat.color}`} />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold text-gray-900\">{stat.value}</div>\r\n                <p className=\"text-xs text-gray-500\">\r\n                  <span className=\"text-green-600\">{stat.change}</span> dari bulan lalu\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Quick Actions */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        {quickActions\r\n          .filter(action => action.showForRoles.includes(user?.role || ''))\r\n          .map((action, index) => {\r\n          const Icon = action.icon;\r\n          return (\r\n            <Card key={index} className=\"hover:shadow-md transition-shadow cursor-pointer\">\r\n              <CardHeader>\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className={`p-2 rounded-lg ${action.color}`}>\r\n                    <Icon className=\"h-5 w-5 text-white\" />\r\n                  </div>\r\n                  <div>\r\n                    <CardTitle className=\"text-lg\">{action.title}</CardTitle>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p className=\"text-gray-600 mb-4\">{action.description}</p>\r\n                <Button asChild variant=\"outline\" className=\"w-full\">\r\n                  <Link to={action.href}>\r\n                    Akses <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n                  </Link>\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Rekap Status (Pivot) */}\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"text-xl font-semibold\">Rekap Status per Kabupaten</CardTitle>\r\n            <div className=\"flex gap-2\">\r\n              <Button \r\n                variant=\"outline\" \r\n                size=\"sm\" \r\n                className=\"border-green-200 text-green-700 hover:bg-green-50\" \r\n                disabled={rekapLoading}\r\n                onClick={async () => {\r\n                  if (!token) return;\r\n                  try {\r\n                    setRekapLoading(true);\r\n                    const res = await apiGet('/api/pengajuan/rekap/aggregate', token);\r\n                    const agg = res?.data?.aggregation || res?.aggregation || [];\r\n                    setRekapAggregation(Array.isArray(agg) ? agg : []);\r\n                  } finally {\r\n                    setRekapLoading(false);\r\n                  }\r\n                }}\r\n              >\r\n                <RefreshCw className={`h-4 w-4 mr-2 ${rekapLoading ? 'animate-spin' : ''}`} /> \r\n                {rekapLoading ? 'Loading...' : 'Refresh'}\r\n              </Button>\r\n              <Button \r\n                variant=\"outline\" \r\n                size=\"sm\" \r\n                className=\"border-green-200 text-green-700 hover:bg-green-50\" \r\n                disabled={exporting}\r\n                onClick={exportExcel}\r\n              >\r\n                <Download className=\"h-4 w-4 mr-2\" /> \r\n                {exporting ? 'Exporting...' : 'Export Excel'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {rekapLoading ? (\r\n            <div className=\"text-center py-8 text-gray-500\">Memuat rekap...</div>\r\n          ) : rekapAggregation.length === 0 ? (\r\n            <div className=\"text-center py-8 text-gray-500\">Tidak ada data</div>\r\n          ) : (\r\n            (() => {\r\n              const statusKeys = Array.from(new Set(rekapAggregation.flatMap(k => k.statuses.map(s => s.status))));\r\n              return (\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"min-w-full text-sm\">\r\n                    <thead>\r\n                      <tr className=\"text-left border-b\">\r\n                        <th className=\"py-3 pr-4 font-medium\">Kabupaten</th>\r\n                        {statusKeys.map(sk => (\r\n                          <th key={sk} className=\"py-3 pr-4 font-medium whitespace-nowrap text-center\">{\r\n                            (() => {\r\n                              const map: Record<string, string> = {\r\n                                draft: 'Draf',\r\n                                submitted: 'Diajukan',\r\n                                approved: 'Disetujui',\r\n                                rejected: 'Ditolak',\r\n                                resubmitted: 'Diajukan Ulang',\r\n                                admin_wilayah_approved: 'Disetujui Admin Wilayah',\r\n                                admin_wilayah_rejected: 'Ditolak Admin Wilayah',\r\n                                final_approved: 'Selesai',\r\n                                final_rejected: 'Ditolak Final'\r\n                              };\r\n                              // Gunakan split/join agar kompatibel dengan lingkungan yang tidak mendukung replaceAll\r\n                              const fallback = (sk || '').split('_').join(' ').toUpperCase();\r\n                              return map[sk] || fallback;\r\n                            })()\r\n                          }</th>\r\n                        ))}\r\n                        <th className=\"py-3 pr-4 font-medium text-center\">Total</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {rekapAggregation.map(row => {\r\n                        const countBy = row.statuses.reduce((acc: any, s) => { acc[s.status] = s.count; return acc; }, {} as Record<string, number>);\r\n                        return (\r\n                          <tr key={row.kabupaten} className=\"border-b hover:bg-gray-50\">\r\n                            <td className=\"py-3 pr-4 font-medium\">{row.kabupaten}</td>\r\n                            {statusKeys.map(sk => (\r\n                              <td key={sk} className=\"py-3 pr-4 text-center\">{countBy[sk] || 0}</td>\r\n                            ))}\r\n                            <td className=\"py-3 pr-4 font-semibold text-center\">{row.total}</td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              );\r\n            })()\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Jenis Template: tidak ditampilkan untuk admin pusat (role user) */}\r\n      {user?.role !== 'user' && (\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\"><FileText className=\"w-5 h-5 text-green-700\" /> Jenis Template</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                {templateTypes.length === 0 ? (\r\n                  <div className=\"text-center text-gray-500\">Belum ada template surat</div>\r\n                ) : (\r\n                  templateTypes.map((name, idx) => (\r\n                    <div key={idx} className=\"flex items-center gap-2 p-2 bg-gray-50 rounded-lg\">\r\n                      <FileText className=\"w-4 h-4 text-green-600\" />\r\n                      <span className=\"font-medium text-gray-900\">{name}</span>\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n          {/* Template Terbaru diganti, atau bisa dihapus jika tidak perlu */}\r\n        </div>\r\n      )}\r\n\r\n      {/* Tabel Surat Terbaru (tambah link ke detail surat) */}\r\n      <Card className=\"mb-4\">\r\n        <CardHeader>\r\n          <CardTitle className=\"text-xl font-semibold\">Daftar Surat</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-2 mb-2\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input input-bordered w-full md:w-64\"\r\n              placeholder=\"Cari nomor, perihal, atau template...\"\r\n              value={search}\r\n              onChange={e => setSearch(e.target.value)}\r\n            />\r\n          </div>\r\n          {loadingLetters ? (\r\n            <div>Loading surat...</div>\r\n          ) : error ? (\r\n            <div className=\"text-error\">{error}</div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>No.</TableHead>\r\n                    <TableHead>Nomor Surat</TableHead>\r\n                    <TableHead>Perihal</TableHead>\r\n                    <TableHead>Status</TableHead>\r\n                    <TableHead>Aksi</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {filteredLetters.length === 0 ? (\r\n                    <TableRow>\r\n                      <TableCell colSpan={5} className=\"text-center\">Tidak ada surat</TableCell>\r\n                    </TableRow>\r\n                  ) : (\r\n                    filteredLetters.slice(0, 5).map((l, i) => (\r\n                      <TableRow key={l.id}>\r\n                        <TableCell>{i + 1}</TableCell>\r\n                        <TableCell>{l.letter_number}</TableCell>\r\n                        <TableCell>{l.subject}</TableCell>\r\n                        <TableCell>{getStatusBadge(l.status)}</TableCell>\r\n                        <TableCell>\r\n                          <Link to={`/letters/${l.id}`} className=\"btn btn-xs btn-outline flex items-center gap-1\">\r\n                            <FileText className=\"w-4 h-4\" /> Detail\r\n                          </Link>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["Dashboard","user","token","loading","useAuth","navigate","useNavigate","letters","setLetters","useState","pengajuan","setPengajuan","error","setError","loadingLetters","setLoadingLetters","loadingPengajuan","setLoadingPengajuan","search","setSearch","rekapAggregation","setRekapAggregation","rekapLoading","setRekapLoading","exporting","setExporting","filteredLetters","l","_a","_b","_c","useEffect","apiGet","res","err","agg","jsxs","jsx","Skeleton","calculatePercentageChange","current","previous","change","getLastMonthData","data","dateField","lastMonth","item","itemDate","getCurrentMonthData","currentMonth","currentMonthLetters","lastMonthLetters","lastMonthPengajuan","getStatusLabel","status","exportExcel","allPengajuanData","page","hasMore","pageData","detailData","summaryData","row","countByStatus","acc","s","wb","XLSX.utils","ws1","ws2","now","timestamp","filename","XLSX.writeFile","stats","FileText","TrendingUp","p","f","Users","Clock","templateTypes","quickActions","BarChart3","getStatusBadge","Badge","PageHeader","Calendar","stat","index","Icon","Card","CardHeader","CardTitle","CardContent","action","Button","Link","ArrowRight","RefreshCw","Download","statusKeys","k","sk","map","fallback","countBy","name","idx","e","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","i"],"mappings":"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"}