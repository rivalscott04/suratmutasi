{"version":3,"file":"PageHeader-B4LvAw57.js","sources":["../../src/components/ui/breadcrumb.tsx","../../src/components/PageHeader.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ChevronRight, Home } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\nimport { BreadcrumbItem } from '@/config/navigation';\r\n\r\ninterface BreadcrumbProps {\r\n  items: BreadcrumbItem[];\r\n  className?: string;\r\n  showHome?: boolean;\r\n}\r\n\r\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({\r\n  items,\r\n  className,\r\n  showHome = true\r\n}) => {\r\n  // Add home breadcrumb if showHome is true and first item is not home\r\n  const breadcrumbItems = showHome && items[0]?.name !== 'Dashboard' \r\n    ? [{ name: 'Dashboard', href: '/dashboard' }, ...items]\r\n    : items;\r\n\r\n  if (breadcrumbItems.length <= 1) {\r\n    return null; // Don't show breadcrumb if only one item\r\n  }\r\n\r\n  return (\r\n    <nav \r\n      className={cn(\r\n        \"flex items-center space-x-1 text-sm text-gray-500 mb-4\",\r\n        className\r\n      )}\r\n      aria-label=\"Breadcrumb\"\r\n    >\r\n      {breadcrumbItems.map((item, index) => (\r\n        <React.Fragment key={index}>\r\n          {index > 0 && (\r\n            <ChevronRight className=\"h-4 w-4 text-gray-400 flex-shrink-0\" />\r\n          )}\r\n          \r\n          {item.current ? (\r\n            <span \r\n              className=\"text-gray-900 font-medium\"\r\n              aria-current=\"page\"\r\n            >\r\n              {item.name}\r\n            </span>\r\n          ) : item.href ? (\r\n            <Link\r\n              to={item.href}\r\n              className=\"text-gray-500 hover:text-gray-700 transition-colors duration-200\"\r\n            >\r\n              {item.name}\r\n            </Link>\r\n          ) : (\r\n            <span className=\"text-gray-500\">{item.name}</span>\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n    </nav>\r\n  );\r\n};\r\n\r\n// Compact breadcrumb variant for mobile\r\nexport const CompactBreadcrumb: React.FC<BreadcrumbProps> = ({\r\n  items,\r\n  className,\r\n  showHome = true\r\n}) => {\r\n  const breadcrumbItems = showHome && items[0]?.name !== 'Dashboard' \r\n    ? [{ name: 'Dashboard', href: '/dashboard' }, ...items]\r\n    : items;\r\n\r\n  if (breadcrumbItems.length <= 1) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <nav \r\n      className={cn(\r\n        \"flex items-center space-x-1 text-xs text-gray-500 mb-2\",\r\n        className\r\n      )}\r\n      aria-label=\"Breadcrumb\"\r\n    >\r\n      <Home className=\"h-3 w-3\" />\r\n      <ChevronRight className=\"h-3 w-3 text-gray-400\" />\r\n      <span className=\"text-gray-900 font-medium\">\r\n        {breadcrumbItems[breadcrumbItems.length - 1]?.name}\r\n      </span>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;","import React from 'react';\r\nimport { useNavigation } from '@/hooks/useNavigation';\r\nimport { Breadcrumb } from '@/components/ui/breadcrumb';\r\nimport { Button } from '@/components/ui/button';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface PageHeaderProps {\r\n  title?: string;\r\n  subtitle?: string;\r\n  actions?: React.ReactNode;\r\n  showBreadcrumb?: boolean;\r\n  showTitle?: boolean;\r\n  className?: string;\r\n  breadcrumbClassName?: string;\r\n}\r\n\r\nexport const PageHeader: React.FC<PageHeaderProps> = ({\r\n  title,\r\n  subtitle,\r\n  actions,\r\n  showBreadcrumb = true,\r\n  showTitle = true,\r\n  className,\r\n  breadcrumbClassName\r\n}) => {\r\n  const { pageTitle, breadcrumbs } = useNavigation();\r\n  \r\n  const displayTitle = title || pageTitle;\r\n  const shouldShowBreadcrumb = showBreadcrumb && breadcrumbs.length > 1;\r\n\r\n  return (\r\n    <div className={cn(\"mb-6\", className)}>\r\n      {shouldShowBreadcrumb && (\r\n        <Breadcrumb \r\n          items={breadcrumbs} \r\n          className={breadcrumbClassName}\r\n        />\r\n      )}\r\n      \r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex-1 min-w-0\">\r\n          {showTitle && displayTitle && (\r\n            <h1 className=\"text-2xl font-bold text-gray-900 truncate\">\r\n              {displayTitle}\r\n            </h1>\r\n          )}\r\n          {subtitle && (\r\n            <p className=\"mt-1 text-sm text-gray-600\">\r\n              {subtitle}\r\n            </p>\r\n          )}\r\n        </div>\r\n        \r\n        {actions && (\r\n          <div className=\"flex items-center gap-2 ml-4\">\r\n            {actions}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Compact variant for mobile\r\nexport const CompactPageHeader: React.FC<PageHeaderProps> = ({\r\n  title,\r\n  subtitle,\r\n  actions,\r\n  showBreadcrumb = true,\r\n  className\r\n}) => {\r\n  const { pageTitle, breadcrumbs } = useNavigation();\r\n  \r\n  const displayTitle = title || pageTitle;\r\n  const shouldShowBreadcrumb = showBreadcrumb && breadcrumbs.length > 1;\r\n\r\n  return (\r\n    <div className={cn(\"mb-4\", className)}>\r\n      {shouldShowBreadcrumb && (\r\n        <Breadcrumb \r\n          items={breadcrumbs} \r\n          className=\"mb-2\"\r\n        />\r\n      )}\r\n      \r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex-1 min-w-0\">\r\n          {displayTitle && (\r\n            <h1 className=\"text-xl font-semibold text-gray-900 truncate\">\r\n              {displayTitle}\r\n            </h1>\r\n          )}\r\n          {subtitle && (\r\n            <p className=\"mt-0.5 text-xs text-gray-600\">\r\n              {subtitle}\r\n            </p>\r\n          )}\r\n        </div>\r\n        \r\n        {actions && (\r\n          <div className=\"flex items-center gap-1 ml-2\">\r\n            {actions}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n"],"names":["Breadcrumb","items","className","showHome","breadcrumbItems","_a","jsx","cn","item","index","jsxs","React","ChevronRight","Link","PageHeader","title","subtitle","actions","showBreadcrumb","showTitle","breadcrumbClassName","pageTitle","breadcrumbs","useNavigation","displayTitle","shouldShowBreadcrumb"],"mappings":"wJAYO,MAAMA,EAAwC,CAAC,CACpD,MAAAC,EACA,UAAAC,EACA,SAAAC,EAAW,EACb,IAAM,OAEJ,MAAMC,EAAkBD,KAAYE,EAAAJ,EAAM,CAAC,IAAP,YAAAI,EAAU,QAAS,YACnD,CAAC,CAAE,KAAM,YAAa,KAAM,YAAgB,EAAA,GAAGJ,CAAK,EACpDA,EAEA,OAAAG,EAAgB,QAAU,EACrB,KAIPE,EAAA,IAAC,MAAA,CACC,UAAWC,EACT,yDACAL,CACF,EACA,aAAW,aAEV,SAAAE,EAAgB,IAAI,CAACI,EAAMC,IACzBC,EAAAA,KAAAC,EAAM,SAAN,CACE,SAAA,CAAAF,EAAQ,GACPH,EAAA,IAACM,EAAa,CAAA,UAAU,sCAAsC,EAG/DJ,EAAK,QACJF,EAAA,IAAC,OAAA,CACC,UAAU,4BACV,eAAa,OAEZ,SAAKE,EAAA,IAAA,CAAA,EAENA,EAAK,KACPF,EAAA,IAACO,EAAA,CACC,GAAIL,EAAK,KACT,UAAU,mEAET,SAAKA,EAAA,IAAA,CAAA,EAGPF,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAiB,WAAK,KAAK,CAAA,CAAA,EApB1BG,CAsBrB,CACD,CAAA,CAAA,CAGP,EC7CaK,EAAwC,CAAC,CACpD,MAAAC,EACA,SAAAC,EACA,QAAAC,EACA,eAAAC,EAAiB,GACjB,UAAAC,EAAY,GACZ,UAAAjB,EACA,oBAAAkB,CACF,IAAM,CACJ,KAAM,CAAE,UAAAC,EAAW,YAAAC,CAAY,EAAIC,EAAc,EAE3CC,EAAeT,GAASM,EACxBI,EAAuBP,GAAkBI,EAAY,OAAS,EAEpE,cACG,MAAI,CAAA,UAAWf,EAAG,OAAQL,CAAS,EACjC,SAAA,CACCuB,GAAAnB,EAAA,IAACN,EAAA,CACC,MAAOsB,EACP,UAAWF,CAAA,CACb,EAGFV,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACZ,SAAA,CAAAS,GAAaK,GACZlB,EAAAA,IAAC,KAAG,CAAA,UAAU,4CACX,SACHkB,EAAA,EAEDR,GACCV,EAAA,IAAC,IAAE,CAAA,UAAU,6BACV,SACHU,EAAA,CAAA,EAEJ,EAECC,GACCX,EAAA,IAAC,MAAI,CAAA,UAAU,+BACZ,SACHW,EAAA,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ"}