{"version":3,"file":"PengajuanSelect-BgUcJ2gj.js","sources":["../../src/pages/PengajuanSelect.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\r\nimport { Search, Users, Send, Loader2, AlertCircle, ChevronLeft, ChevronRight, Briefcase, ArrowLeft } from 'lucide-react';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { apiGet, apiPost } from '@/lib/api';\r\n\r\n\r\ninterface PegawaiData {\r\n  nip: string;\r\n  nama: string;\r\n  jabatan: string;\r\n  unit_kerja: string;\r\n  induk_unit: string;\r\n  total_surat: number;\r\n}\r\n\r\ninterface JobTypeConfig {\r\n  id: number;\r\n  jenis_jabatan: string;\r\n  min_dokumen: number;\r\n  max_dokumen: number;\r\n  required_files: string[];\r\n  is_active: boolean;\r\n}\r\n\r\nconst PengajuanSelect: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { user, token, isAuthenticated } = useAuth();\r\n  const [pegawaiData, setPegawaiData] = useState<Record<string, PegawaiData[]>>({});\r\n  const [selectedPegawai, setSelectedPegawai] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  \r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(5);\r\n\r\n  // Jabatan selection state\r\n  const [jobTypes, setJobTypes] = useState<JobTypeConfig[]>([]);\r\n  const [selectedJabatan, setSelectedJabatan] = useState<JobTypeConfig | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n    // Fetch job types saat komponen dimount\r\n    fetchJobTypes();\r\n  }, [isAuthenticated, navigate]);\r\n\r\n\r\n\r\n  const fetchJobTypes = async () => {\r\n    try {\r\n      const response = await apiGet('/api/job-type-configurations?active_only=true', token);\r\n      if (response.success) {\r\n        setJobTypes(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching job types:', error);\r\n      setError('Gagal mengambil data jabatan');\r\n    }\r\n  };\r\n\r\n  const handleJabatanSelected = (jabatan: JobTypeConfig) => {\r\n    setSelectedJabatan(jabatan);\r\n    // Setelah jabatan dipilih, fetch pegawai yang sesuai dengan jabatan tersebut\r\n    fetchPegawaiByJabatan(jabatan.id);\r\n  };\r\n\r\n  const fetchPegawaiByJabatan = async (jabatanId: number) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null); // Clear previous errors\r\n      \r\n      // Gunakan endpoint yang sudah ada\r\n      const response = await apiGet('/api/pengajuan/pegawai-grouped', token);\r\n      if (response.success) {\r\n        // Filter pegawai berdasarkan jabatan yang dipilih\r\n        const filteredData: Record<string, PegawaiData[]> = {};\r\n        \r\n        Object.entries(response.data).forEach(([key, pegawaiList]) => {\r\n          const filteredPegawai = (pegawaiList as PegawaiData[]).filter(pegawai => {\r\n            // Filter berdasarkan jabatan yang dipilih\r\n            // Untuk sementara, kita akan menampilkan semua pegawai yang memiliki surat\r\n            // karena belum ada mapping yang jelas antara job type dan jabatan pegawai\r\n            return true; // Tampilkan semua pegawai yang memiliki surat\r\n          });\r\n          \r\n          if (filteredPegawai.length > 0) {\r\n            filteredData[key] = filteredPegawai;\r\n          }\r\n        });\r\n        \r\n        setPegawaiData(filteredData);\r\n        \r\n        // Jika tidak ada data, tampilkan pesan yang sesuai\r\n        if (Object.keys(filteredData).length === 0) {\r\n          setError('Tidak ada pegawai yang tersedia untuk jabatan ini');\r\n        }\r\n      } else {\r\n        setError(response.message || 'Gagal mengambil data pegawai');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching pegawai by jabatan:', error);\r\n      setError('Terjadi kesalahan saat mengambil data pegawai');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreatePengajuan = async () => {\r\n    if (!selectedPegawai || !selectedJabatan) return;\r\n\r\n    try {\r\n      setSubmitting(true);\r\n      const response = await apiPost('/api/pengajuan', { \r\n        pegawai_nip: selectedPegawai,\r\n        jabatan_id: selectedJabatan.id,\r\n        jenis_jabatan: selectedJabatan.jenis_jabatan\r\n      }, token);\r\n      if (response.success) {\r\n        // Redirect ke halaman upload file dengan data jabatan\r\n        navigate(`/pengajuan/${response.data.id}/upload`, {\r\n          state: { \r\n            jabatan: selectedJabatan,\r\n            requiredFiles: selectedJabatan.required_files \r\n          }\r\n        });\r\n      } else {\r\n        setError(response.message || 'Gagal membuat pengajuan');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating pengajuan:', error);\r\n      setError('Terjadi kesalahan saat membuat pengajuan');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Fungsi untuk mendapatkan semua pegawai yang ditampilkan\r\n  const getDisplayedPegawai = () => {\r\n    const allPegawai: PegawaiData[] = [];\r\n    Object.values(pegawaiData).forEach(group => {\r\n      allPegawai.push(...group);\r\n    });\r\n\r\n    if (!searchTerm) return allPegawai;\r\n\r\n    return allPegawai.filter(pegawai =>\r\n      pegawai.nama.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      pegawai.jabatan.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      pegawai.unit_kerja.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      pegawai.nip.includes(searchTerm)\r\n    );\r\n  };\r\n\r\n  // Fungsi untuk handle select all\r\n  const handleSelectAll = (checked: boolean) => {\r\n    if (checked) {\r\n      const displayedPegawai = getDisplayedPegawai();\r\n      if (displayedPegawai.length > 0) {\r\n        setSelectedPegawai(displayedPegawai[0].nip); // Hanya pilih yang pertama\r\n      }\r\n    } else {\r\n      setSelectedPegawai(null);\r\n    }\r\n  };\r\n\r\n  const filteredData = getDisplayedPegawai();\r\n\r\n  // Pagination logic\r\n  const totalItems = filteredData.length;\r\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = startIndex + itemsPerPage;\r\n  const currentData = filteredData.slice(startIndex, endIndex);\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n    setSelectedPegawai(null); // Reset selection when page changes\r\n  };\r\n\r\n  const handleSearch = (value: string) => {\r\n    setSearchTerm(value);\r\n    setCurrentPage(1); // Reset to first page when searching\r\n    setSelectedPegawai(null); // Reset selection when searching\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      {/* Header dengan button kembali */}\r\n      <div className=\"flex items-center gap-4 mb-6\">\r\n        <Button\r\n          variant=\"outline\"\r\n          onClick={() => navigate('/pengajuan')}\r\n          className=\"flex items-center gap-2\"\r\n        >\r\n          <ArrowLeft className=\"h-4 w-4\" />\r\n          Kembali ke Data Pengajuan\r\n        </Button>\r\n      </div>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Users className=\"h-5 w-5\" />\r\n            Pilih Pegawai untuk Pengajuan\r\n          </CardTitle>\r\n          <div className=\"text-sm text-gray-600\">\r\n            {selectedJabatan \r\n              ? `Pilih pegawai untuk pengajuan jabatan: ${selectedJabatan.jenis_jabatan}`\r\n              : 'Pilih jabatan terlebih dahulu, kemudian pilih pegawai yang akan diajukan'\r\n            }\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {error && (\r\n            <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n              <p className=\"text-red-600\">{error}</p>\r\n            </div>\r\n          )}\r\n\r\n                     {/* Jabatan Selection Cards */}\r\n           {!selectedJabatan && (\r\n             <div className=\"mb-6\">\r\n               <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">\r\n                 Pilih Jabatan untuk Pengajuan\r\n               </h3>\r\n               <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                 {jobTypes.map((job) => (\r\n                   <Card\r\n                     key={job.id}\r\n                     className=\"cursor-pointer transition-all duration-200 hover:shadow-md hover:border-green-300\"\r\n                     onClick={() => handleJabatanSelected(job)}\r\n                   >\r\n                     <CardHeader className=\"pb-3\">\r\n                       <div className=\"flex justify-between items-start\">\r\n                         <CardTitle className=\"text-lg font-semibold text-gray-800\">\r\n                           {job.jenis_jabatan}\r\n                         </CardTitle>\r\n                         <Badge \r\n                           variant=\"secondary\" \r\n                           className=\"bg-green-100 text-green-800 border-green-200\"\r\n                         >\r\n                           Aktif\r\n                         </Badge>\r\n                       </div>\r\n                     </CardHeader>\r\n                     <CardContent className=\"pt-0\">\r\n                       <div className=\"space-y-3\">\r\n                         <div className=\"flex justify-between items-center\">\r\n                           <span className=\"text-sm text-gray-600\">Total Dokumen:</span>\r\n                           <span className=\"font-semibold text-green-600\">{job.max_dokumen}</span>\r\n                         </div>\r\n                         <div className=\"flex justify-between items-center\">\r\n                           <span className=\"text-sm text-gray-600\">Min Dokumen:</span>\r\n                           <span className=\"text-sm text-gray-500\">{job.min_dokumen}</span>\r\n                         </div>\r\n                         <div className=\"flex justify-between items-center\">\r\n                           <span className=\"text-sm text-gray-600\">Jenis File:</span>\r\n                           <span className=\"text-sm text-gray-500\">{job.required_files.length} jenis</span>\r\n                         </div>\r\n                       </div>\r\n                     </CardContent>\r\n                   </Card>\r\n                 ))}\r\n               </div>\r\n               {jobTypes.length === 0 && (\r\n                 <div className=\"text-center py-8\">\r\n                   <Briefcase className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                   <p className=\"text-gray-500\">Tidak ada jabatan yang tersedia</p>\r\n                 </div>\r\n               )}\r\n             </div>\r\n           )}\r\n\r\n          {/* Selected Jabatan Info */}\r\n          {selectedJabatan && (\r\n            <div className=\"mb-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <h3 className=\"font-semibold text-green-800\">\r\n                    Jabatan: {selectedJabatan.jenis_jabatan}\r\n                  </h3>\r\n                  <p className=\"text-sm text-green-600\">\r\n                    {selectedJabatan.required_files.length} jenis dokumen diperlukan\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Badge className=\"bg-green-600 text-white\">\r\n                    {selectedJabatan.max_dokumen} dokumen\r\n                  </Badge>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => setSelectedJabatan(null)}\r\n                    className=\"border-green-600 text-green-600 hover:bg-green-50\"\r\n                  >\r\n                    Pilih Jabatan Lain\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Search Bar */}\r\n          <div className=\"mb-6\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n              <Input\r\n                placeholder=\"Cari pegawai berdasarkan nama, jabatan, unit kerja, atau NIP...\"\r\n                value={searchTerm}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n            {filteredData.length > 0 && (\r\n              <p className=\"text-sm text-gray-500 mt-2\">\r\n                Menampilkan {filteredData.length} pegawai (halaman {currentPage} dari {totalPages})\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* DataTable */}\r\n          <div className=\"border rounded-lg overflow-hidden\">\r\n            {!selectedJabatan ? null : loading ? (\r\n              <div className=\"flex items-center justify-center py-12\">\r\n                <Loader2 className=\"h-8 w-8 animate-spin mr-2\" />\r\n                <span>Memuat data pegawai...</span>\r\n              </div>\r\n            ) : error ? (\r\n              <div className=\"flex items-center justify-center py-12\">\r\n                <div className=\"text-center\">\r\n                  <AlertCircle className=\"h-12 w-12 text-red-400 mx-auto mb-4\" />\r\n                  <p className=\"text-red-600 mb-2\">{error}</p>\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    Pastikan sudah ada surat yang dibuat untuk pegawai di menu Template Generator\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead className=\"w-12\">\r\n                        <Checkbox\r\n                          checked={selectedPegawai !== null}\r\n                          onCheckedChange={handleSelectAll}\r\n                        />\r\n                      </TableHead>\r\n                      <TableHead>NIP</TableHead>\r\n                      <TableHead>Nama</TableHead>\r\n                      <TableHead>Jabatan</TableHead>\r\n                      <TableHead>Unit Kerja</TableHead>\r\n                      <TableHead>Induk Unit</TableHead>\r\n                      <TableHead className=\"text-center\">Total Surat</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {currentData.length === 0 ? (\r\n                      <TableRow>\r\n                        <TableCell colSpan={7} className=\"text-center py-8 text-gray-500\">\r\n                          {searchTerm ? (\r\n                            'Tidak ada pegawai yang sesuai dengan pencarian'\r\n                          ) : (\r\n                            <div>\r\n                              <p className=\"mb-2\">Tidak ada pegawai yang tersedia</p>\r\n                              <p className=\"text-sm text-gray-400\">\r\n                                Pastikan sudah ada surat yang dibuat untuk pegawai di menu Template Generator\r\n                              </p>\r\n                            </div>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ) : (\r\n                      currentData.map((pegawai) => (\r\n                        <TableRow key={pegawai.nip} className=\"hover:bg-gray-50\">\r\n                          <TableCell>\r\n                            <Checkbox\r\n                              checked={selectedPegawai === pegawai.nip}\r\n                              onCheckedChange={(checked) => {\r\n                                setSelectedPegawai(checked ? pegawai.nip : null);\r\n                              }}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell className=\"font-mono text-sm\">{pegawai.nip}</TableCell>\r\n                          <TableCell className=\"font-medium\">{pegawai.nama}</TableCell>\r\n                          <TableCell>{pegawai.jabatan}</TableCell>\r\n                          <TableCell>{pegawai.unit_kerja}</TableCell>\r\n                          <TableCell>{pegawai.induk_unit}</TableCell>\r\n                          <TableCell className=\"text-center\">\r\n                            <Badge variant=\"secondary\">\r\n                              {pegawai.total_surat} surat\r\n                            </Badge>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n\r\n                {/* Pagination */}\r\n                {totalPages > 1 && (\r\n                  <div className=\"flex items-center justify-between px-4 py-3 border-t bg-gray-50\">\r\n                    <div className=\"text-sm text-gray-700\">\r\n                      Menampilkan {startIndex + 1} sampai {Math.min(endIndex, totalItems)} dari {totalItems} pegawai\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Button\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={() => handlePageChange(currentPage - 1)}\r\n                        disabled={currentPage === 1}\r\n                      >\r\n                        <ChevronLeft className=\"h-4 w-4\" />\r\n                        Sebelumnya\r\n                      </Button>\r\n                      \r\n                      <div className=\"flex items-center gap-1\">\r\n                        {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n                          <Button\r\n                            key={page}\r\n                            variant={currentPage === page ? \"default\" : \"outline\"}\r\n                            size=\"sm\"\r\n                            onClick={() => handlePageChange(page)}\r\n                            className=\"w-8 h-8 p-0\"\r\n                          >\r\n                            {page}\r\n                          </Button>\r\n                        ))}\r\n                      </div>\r\n                      \r\n                      <Button\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={() => handlePageChange(currentPage + 1)}\r\n                        disabled={currentPage === totalPages}\r\n                      >\r\n                        Selanjutnya\r\n                        <ChevronRight className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          {/* Action Button */}\r\n          <div className=\"mt-6 flex justify-end\">\r\n            <Button\r\n              onClick={handleCreatePengajuan}\r\n              disabled={!selectedPegawai || !selectedJabatan || submitting}\r\n              size=\"lg\"\r\n              className=\"bg-green-600 hover:bg-green-700 text-white\"\r\n            >\r\n              {submitting ? (\r\n                <>\r\n                  <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                  Membuat Pengajuan...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Send className=\"h-4 w-4 mr-2\" />\r\n                  Proses Pengajuan\r\n                </>\r\n              )}\r\n            </Button>\r\n          </div>\r\n\r\n          {!selectedPegawai && selectedJabatan && filteredData.length > 0 && (\r\n            <p className=\"text-sm text-gray-500 mt-2 text-center\">\r\n              Pilih satu pegawai untuk melanjutkan proses pengajuan\r\n            </p>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PengajuanSelect; "],"names":["PengajuanSelect","navigate","useNavigate","user","token","isAuthenticated","useAuth","pegawaiData","setPegawaiData","useState","selectedPegawai","setSelectedPegawai","searchTerm","setSearchTerm","loading","setLoading","error","setError","submitting","setSubmitting","currentPage","setCurrentPage","itemsPerPage","jobTypes","setJobTypes","selectedJabatan","setSelectedJabatan","useEffect","fetchJobTypes","response","apiGet","handleJabatanSelected","jabatan","fetchPegawaiByJabatan","jabatanId","filteredData","key","pegawaiList","filteredPegawai","pegawai","handleCreatePengajuan","apiPost","getDisplayedPegawai","allPegawai","group","handleSelectAll","checked","displayedPegawai","totalItems","totalPages","startIndex","endIndex","currentData","handlePageChange","page","handleSearch","value","jsxs","jsx","Button","ArrowLeft","Card","CardHeader","CardTitle","Users","CardContent","job","Badge","Briefcase","Search","Input","e","Loader2","AlertCircle","Fragment","Table","TableHeader","TableRow","TableHead","Checkbox","TableBody","TableCell","ChevronLeft","_","i","ChevronRight","Send"],"mappings":"ibA+BA,MAAMA,GAA4B,IAAM,CACtC,MAAMC,EAAWC,KACX,CAAE,KAAAC,GAAM,MAAAC,EAAO,gBAAAC,GAAoBC,GAAQ,EAC3C,CAACC,EAAaC,CAAc,EAAIC,EAAA,SAAwC,CAAE,CAAA,EAC1E,CAACC,EAAiBC,CAAkB,EAAIF,WAAwB,IAAI,EACpE,CAACG,EAAYC,CAAa,EAAIJ,WAAS,EAAE,EACzC,CAACK,EAASC,CAAU,EAAIN,WAAS,EAAI,EACrC,CAACO,EAAOC,CAAQ,EAAIR,WAAwB,IAAI,EAChD,CAACS,EAAYC,CAAa,EAAIV,WAAS,EAAK,EAG5C,CAACW,EAAaC,CAAc,EAAIZ,WAAS,CAAC,EAC1C,CAACa,CAAY,EAAIb,EAAA,SAAS,CAAC,EAG3B,CAACc,EAAUC,CAAW,EAAIf,EAAA,SAA0B,CAAE,CAAA,EACtD,CAACgB,EAAiBC,CAAkB,EAAIjB,WAA+B,IAAI,EAEjFkB,EAAAA,UAAU,IAAM,CACd,GAAI,CAACtB,EAAiB,CACpBJ,EAAS,GAAG,EACZ,MACF,CAEc2B,GAAA,EACb,CAACvB,EAAiBJ,CAAQ,CAAC,EAI9B,MAAM2B,EAAgB,SAAY,CAC5B,GAAA,CACF,MAAMC,EAAW,MAAMC,EAAO,gDAAiD1B,CAAK,EAChFyB,EAAS,SACXL,EAAYK,EAAS,IAAI,QAEpBb,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,EAChDC,EAAS,8BAA8B,CACzC,CAAA,EAGIc,EAAyBC,GAA2B,CACxDN,EAAmBM,CAAO,EAE1BC,EAAsBD,EAAQ,EAAE,CAAA,EAG5BC,EAAwB,MAAOC,GAAsB,CACrD,GAAA,CACFnB,EAAW,EAAI,EACfE,EAAS,IAAI,EAGb,MAAMY,EAAW,MAAMC,EAAO,iCAAkC1B,CAAK,EACrE,GAAIyB,EAAS,QAAS,CAEpB,MAAMM,EAA8C,CAAA,EAE7C,OAAA,QAAQN,EAAS,IAAI,EAAE,QAAQ,CAAC,CAACO,GAAKC,EAAW,IAAM,CACtD,MAAAC,EAAmBD,GAA8B,OAAkBE,IAIhE,EACR,EAEGD,EAAgB,OAAS,IAC3BH,EAAaC,EAAG,EAAIE,EACtB,CACD,EAED9B,EAAe2B,CAAY,EAGvB,OAAO,KAAKA,CAAY,EAAE,SAAW,GACvClB,EAAS,mDAAmD,CAC9D,MAESA,EAAAY,EAAS,SAAW,8BAA8B,QAEtDb,EAAO,CACN,QAAA,MAAM,qCAAsCA,CAAK,EACzDC,EAAS,+CAA+C,CAAA,QACxD,CACAF,EAAW,EAAK,CAClB,CAAA,EAGIyB,EAAwB,SAAY,CACpC,GAAA,GAAC9B,GAAmB,CAACe,GAErB,GAAA,CACFN,EAAc,EAAI,EACZ,MAAAU,EAAW,MAAMY,GAAQ,iBAAkB,CAC/C,YAAa/B,EACb,WAAYe,EAAgB,GAC5B,cAAeA,EAAgB,eAC9BrB,CAAK,EACJyB,EAAS,QAEX5B,EAAS,cAAc4B,EAAS,KAAK,EAAE,UAAW,CAChD,MAAO,CACL,QAASJ,EACT,cAAeA,EAAgB,cACjC,CAAA,CACD,EAEQR,EAAAY,EAAS,SAAW,yBAAyB,QAEjDb,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,EAChDC,EAAS,0CAA0C,CAAA,QACnD,CACAE,EAAc,EAAK,CACrB,CAAA,EAIIuB,EAAsB,IAAM,CAChC,MAAMC,EAA4B,CAAA,EAK9B,OAJJ,OAAO,OAAOpC,CAAW,EAAE,QAAiBqC,GAAA,CAC/BD,EAAA,KAAK,GAAGC,CAAK,CAAA,CACzB,EAEIhC,EAEE+B,EAAW,OAChBJ,GAAAA,EAAQ,KAAK,YAAc,EAAA,SAAS3B,EAAW,YAAa,CAAA,GAC5D2B,EAAQ,QAAQ,YAAc,EAAA,SAAS3B,EAAW,YAAa,CAAA,GAC/D2B,EAAQ,WAAW,YAAc,EAAA,SAAS3B,EAAW,YAAa,CAAA,GAClE2B,EAAQ,IAAI,SAAS3B,CAAU,CAAA,EANT+B,CAOxB,EAIIE,EAAmBC,GAAqB,CAC5C,GAAIA,EAAS,CACX,MAAMC,EAAmBL,IACrBK,EAAiB,OAAS,GACTpC,EAAAoC,EAAiB,CAAC,EAAE,GAAG,CAC5C,MAEApC,EAAmB,IAAI,CACzB,EAGIwB,EAAeO,IAGfM,EAAab,EAAa,OAC1Bc,EAAa,KAAK,KAAKD,EAAa1B,CAAY,EAChD4B,GAAc9B,EAAc,GAAKE,EACjC6B,EAAWD,EAAa5B,EACxB8B,EAAcjB,EAAa,MAAMe,EAAYC,CAAQ,EAErDE,EAAoBC,GAAiB,CACzCjC,EAAeiC,CAAI,EACnB3C,EAAmB,IAAI,CAAA,EAGnB4C,EAAgBC,GAAkB,CACtC3C,EAAc2C,CAAK,EACnBnC,EAAe,CAAC,EAChBV,EAAmB,IAAI,CAAA,EAIvB,OAAA8C,EAAA,KAAC,MAAI,CAAA,UAAU,wBAEb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,+BACb,SAAAD,EAAA,KAACE,EAAA,CACC,QAAQ,UACR,QAAS,IAAM1D,EAAS,YAAY,EACpC,UAAU,0BAEV,SAAA,CAACyD,EAAAA,IAAAE,GAAA,CAAU,UAAU,SAAU,CAAA,EAAE,2BAAA,CAAA,CAAA,EAGrC,SAECC,EACC,CAAA,SAAA,CAAAJ,OAACK,EACC,CAAA,SAAA,CAACL,EAAAA,KAAAM,EAAA,CAAU,UAAU,0BACnB,SAAA,CAACL,EAAAA,IAAAM,GAAA,CAAM,UAAU,SAAU,CAAA,EAAE,+BAAA,EAE/B,EACAN,EAAAA,IAAC,OAAI,UAAU,wBACZ,WACG,0CAA0CjC,EAAgB,aAAa,GACvE,0EAEN,CAAA,CAAA,EACF,SACCwC,EACE,CAAA,SAAA,CACCjD,GAAA0C,EAAA,IAAC,OAAI,UAAU,sDACb,eAAC,IAAE,CAAA,UAAU,eAAgB,SAAA1C,CAAA,CAAM,CACrC,CAAA,EAIA,CAACS,GACCgC,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAEzD,gCAAA,QACC,MAAI,CAAA,UAAU,uDACZ,SAASnC,EAAA,IAAK2C,GACbT,EAAA,KAACI,EAAA,CAEC,UAAU,oFACV,QAAS,IAAM9B,EAAsBmC,CAAG,EAExC,SAAA,CAAAR,EAAAA,IAACI,GAAW,UAAU,OACpB,SAACL,EAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAC,EAAA,IAACK,EAAU,CAAA,UAAU,sCAClB,SAAAG,EAAI,cACP,EACAR,EAAA,IAACS,EAAA,CACC,QAAQ,YACR,UAAU,+CACX,SAAA,OAAA,CAED,CAAA,CAAA,CACF,CACF,CAAA,QACCF,EAAY,CAAA,UAAU,OACrB,SAACR,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAc,iBAAA,EACrDA,EAAA,IAAA,OAAA,CAAK,UAAU,+BAAgC,WAAI,YAAY,CAAA,EAClE,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAY,eAAA,EACnDA,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAyB,WAAI,YAAY,CAAA,EAC3D,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAW,cAAA,EACnDD,EAAAA,KAAC,OAAK,CAAA,UAAU,wBAAyB,SAAA,CAAAS,EAAI,eAAe,OAAO,QAAA,EAAM,CAAA,EAC3E,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,EAhCKA,EAAI,EAkCZ,CAAA,EACH,EACC3C,EAAS,SAAW,GAClBkC,EAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACC,EAAAA,IAAAU,GAAA,CAAU,UAAU,sCAAuC,CAAA,EAC3DV,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAA+B,kCAAA,CAAA,EAC9D,CAAA,EAEJ,EAIFjC,SACE,MAAI,CAAA,UAAU,0DACb,SAACgC,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,+BAA+B,SAAA,CAAA,YACjChC,EAAgB,aAAA,EAC5B,EACAgC,EAAAA,KAAC,IAAE,CAAA,UAAU,yBACV,SAAA,CAAAhC,EAAgB,eAAe,OAAO,2BAAA,EACzC,CAAA,EACF,EACAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAAU,EAAA,CAAM,UAAU,0BACd,SAAA,CAAgB1C,EAAA,YAAY,UAAA,EAC/B,EACAiC,EAAA,IAACC,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAMjC,EAAmB,IAAI,EACtC,UAAU,oDACX,SAAA,oBAAA,CAED,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,EAIF+B,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACC,EAAAA,IAAAW,GAAA,CAAO,UAAU,0EAA2E,CAAA,EAC7FX,EAAA,IAACY,GAAA,CACC,YAAY,kEACZ,MAAO1D,EACP,SAAW2D,GAAMhB,EAAagB,EAAE,OAAO,KAAK,EAC5C,UAAU,OAAA,CACZ,CAAA,EACF,EACCpC,EAAa,OAAS,GACpBsB,EAAA,KAAA,IAAA,CAAE,UAAU,6BAA6B,SAAA,CAAA,eAC3BtB,EAAa,OAAO,qBAAmBf,EAAY,SAAO6B,EAAW,GAAA,EACpF,CAAA,EAEJ,EAGAS,EAAA,IAAC,MAAI,CAAA,UAAU,oCACZ,SAACjC,EAAyBX,EACzB2C,EAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACC,EAAAA,IAAAc,EAAA,CAAQ,UAAU,2BAA4B,CAAA,EAC/Cd,EAAAA,IAAC,QAAK,SAAsB,wBAAA,CAAA,CAC9B,CAAA,CAAA,EACE1C,EACD0C,EAAA,IAAA,MAAA,CAAI,UAAU,yCACb,SAAAD,EAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAAA,IAAAe,GAAA,CAAY,UAAU,qCAAsC,CAAA,EAC5Df,EAAA,IAAA,IAAA,CAAE,UAAU,oBAAqB,SAAM1C,EAAA,EACvC0C,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAErC,gFAAA,CACF,CAAA,CAAA,CAAA,CACF,EAGED,EAAA,KAAAiB,EAAA,SAAA,CAAA,SAAA,CAAAjB,OAACkB,GACC,CAAA,SAAA,CAACjB,EAAA,IAAAkB,GAAA,CACC,gBAACC,EACC,CAAA,SAAA,CAACnB,EAAAA,IAAAoB,EAAA,CAAU,UAAU,OACnB,SAAApB,EAAA,IAACqB,EAAA,CACC,QAASrE,IAAoB,KAC7B,gBAAiBmC,CAAA,CAAA,EAErB,EACAa,EAAAA,IAACoB,GAAU,SAAG,KAAA,CAAA,EACdpB,EAAAA,IAACoB,GAAU,SAAI,MAAA,CAAA,EACfpB,EAAAA,IAACoB,GAAU,SAAO,SAAA,CAAA,EAClBpB,EAAAA,IAACoB,GAAU,SAAU,YAAA,CAAA,EACrBpB,EAAAA,IAACoB,GAAU,SAAU,YAAA,CAAA,EACpBpB,EAAA,IAAAoB,EAAA,CAAU,UAAU,cAAc,SAAW,cAAA,CAAA,CAAA,CAChD,CACF,CAAA,QACCE,GACE,CAAA,SAAA5B,EAAY,SAAW,QACrByB,EACC,CAAA,SAAAnB,EAAA,IAACuB,EAAU,CAAA,QAAS,EAAG,UAAU,iCAC9B,SACCrE,EAAA,wDAEC,MACC,CAAA,SAAA,CAAC8C,EAAA,IAAA,IAAA,CAAE,UAAU,OAAO,SAA+B,kCAAA,EAClDA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAErC,gFAAA,CACF,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,EAEAN,EAAY,IAAKb,GACfkB,EAAAA,KAACoB,EAA2B,CAAA,UAAU,mBACpC,SAAA,CAAAnB,MAACuB,EACC,CAAA,SAAAvB,EAAA,IAACqB,EAAA,CACC,QAASrE,IAAoB6B,EAAQ,IACrC,gBAAkBO,GAAY,CACTnC,EAAAmC,EAAUP,EAAQ,IAAM,IAAI,CACjD,CAAA,CAAA,EAEJ,EACCmB,EAAA,IAAAuB,EAAA,CAAU,UAAU,oBAAqB,WAAQ,IAAI,EACrDvB,EAAA,IAAAuB,EAAA,CAAU,UAAU,cAAe,WAAQ,KAAK,EACjDvB,EAAAA,IAACuB,EAAW,CAAA,SAAA1C,EAAQ,OAAQ,CAAA,EAC5BmB,EAAAA,IAACuB,EAAW,CAAA,SAAA1C,EAAQ,UAAW,CAAA,EAC/BmB,EAAAA,IAACuB,EAAW,CAAA,SAAA1C,EAAQ,UAAW,CAAA,QAC9B0C,EAAU,CAAA,UAAU,cACnB,SAACxB,EAAA,KAAAU,EAAA,CAAM,QAAQ,YACZ,SAAA,CAAQ5B,EAAA,YAAY,QAAA,CAAA,CACvB,CACF,CAAA,CAlBa,CAAA,EAAAA,EAAQ,GAmBvB,CACD,EAEL,CAAA,EACF,EAGCU,EAAa,GACXQ,OAAA,MAAA,CAAI,UAAU,kEACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wBAAwB,SAAA,CAAA,eACxBP,EAAa,EAAE,WAAS,KAAK,IAAIC,EAAUH,CAAU,EAAE,SAAOA,EAAW,UAAA,EACxF,EACAS,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAA,EAAA,KAACE,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAMN,EAAiBjC,EAAc,CAAC,EAC/C,SAAUA,IAAgB,EAE1B,SAAA,CAACsC,EAAAA,IAAAwB,GAAA,CAAY,UAAU,SAAU,CAAA,EAAE,YAAA,CAAA,CAErC,QAEC,MAAI,CAAA,UAAU,0BACZ,SAAM,MAAA,KAAK,CAAE,OAAQjC,CAAA,EAAc,CAACkC,EAAGC,IAAMA,EAAI,CAAC,EAAE,IAAK9B,GACxDI,EAAA,IAACC,EAAA,CAEC,QAASvC,IAAgBkC,EAAO,UAAY,UAC5C,KAAK,KACL,QAAS,IAAMD,EAAiBC,CAAI,EACpC,UAAU,cAET,SAAAA,CAAA,EANIA,CAQR,CAAA,EACH,EAEAG,EAAA,KAACE,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAMN,EAAiBjC,EAAc,CAAC,EAC/C,SAAUA,IAAgB6B,EAC3B,SAAA,CAAA,cAECS,EAAAA,IAAC2B,GAAa,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CACpC,CAAA,EACF,CAAA,EACF,CAAA,CAAA,CAEJ,EAxHkB,IA0HtB,CAAA,EAGA3B,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAACC,EAAA,CACC,QAASnB,EACT,SAAU,CAAC9B,GAAmB,CAACe,GAAmBP,EAClD,KAAK,KACL,UAAU,6CAET,WAEGuC,EAAAA,KAAAiB,EAAA,SAAA,CAAA,SAAA,CAAChB,EAAAA,IAAAc,EAAA,CAAQ,UAAU,2BAA4B,CAAA,EAAE,sBAAA,CAAA,CAEnD,EAGEf,EAAAA,KAAAiB,EAAA,SAAA,CAAA,SAAA,CAAChB,EAAAA,IAAA4B,GAAA,CAAK,UAAU,cAAe,CAAA,EAAE,kBAAA,EAEnC,CAAA,CAAA,EAGN,EAEC,CAAC5E,GAAmBe,GAAmBU,EAAa,OAAS,GAC3DuB,EAAAA,IAAA,IAAA,CAAE,UAAU,yCAAyC,SAEtD,uDAAA,CAAA,CAAA,EAEJ,CAAA,EACF,CAGF,CAAA,CAAA,CAEJ"}