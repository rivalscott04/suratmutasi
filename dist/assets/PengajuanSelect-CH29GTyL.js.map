{"version":3,"file":"PengajuanSelect-CH29GTyL.js","sources":["../../src/components/ui/error-modal.tsx","../../src/pages/PengajuanSelect.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { AlertCircle, X } from 'lucide-react';\r\n\r\ninterface ErrorModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  title?: string;\r\n  message: string;\r\n  showRetry?: boolean;\r\n  onRetry?: () => void;\r\n}\r\n\r\nconst ErrorModal: React.FC<ErrorModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  title = \"Terjadi Kesalahan\",\r\n  message,\r\n  showRetry = false,\r\n  onRetry\r\n}) => {\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-md\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center gap-2 text-red-600\">\r\n            <AlertCircle className=\"h-5 w-5\" />\r\n            {title}\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n        \r\n        <div className=\"py-4\">\r\n          <div className=\"flex items-start gap-3\">\r\n            <div className=\"flex-shrink-0\">\r\n              <AlertCircle className=\"h-6 w-6 text-red-500\" />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <p className=\"text-gray-700 leading-relaxed\">\r\n                {message}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex justify-end gap-2 pt-4 border-t\">\r\n          {showRetry && onRetry && (\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={onRetry}\r\n              className=\"border-gray-300\"\r\n            >\r\n              Coba Lagi\r\n            </Button>\r\n          )}\r\n          <Button\r\n            onClick={onClose}\r\n            className=\"bg-red-600 hover:bg-red-700 text-white\"\r\n          >\r\n            Tutup\r\n          </Button>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\r\nimport { Search, Users, Send, Loader2, AlertCircle, ChevronLeft, ChevronRight, Briefcase, ArrowLeft } from 'lucide-react';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { apiGet, apiPost } from '@/lib/api';\r\nimport ErrorModal from '@/components/ui/error-modal';\r\n\r\n\r\ninterface PegawaiData {\r\n  nip: string;\r\n  nama: string;\r\n  jabatan: string;\r\n  unit_kerja: string;\r\n  induk_unit: string;\r\n  total_surat: number;\r\n}\r\n\r\ninterface JobTypeConfig {\r\n  id: number;\r\n  jenis_jabatan: string;\r\n  min_dokumen: number;\r\n  max_dokumen: number;\r\n  required_files: string[];\r\n  is_active: boolean;\r\n}\r\n\r\nconst PengajuanSelect: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { user, token, isAuthenticated } = useAuth();\r\n  const [pegawaiData, setPegawaiData] = useState<Record<string, PegawaiData[]>>({});\r\n  const [selectedPegawai, setSelectedPegawai] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [showErrorModal, setShowErrorModal] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  \r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(5);\r\n\r\n  // Jabatan selection state\r\n  const [jobTypes, setJobTypes] = useState<JobTypeConfig[]>([]);\r\n  const [selectedJabatan, setSelectedJabatan] = useState<JobTypeConfig | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n    // Fetch job types saat komponen dimount\r\n    fetchJobTypes();\r\n  }, [isAuthenticated, navigate]);\r\n\r\n\r\n\r\n  const fetchJobTypes = async () => {\r\n    try {\r\n      const response = await apiGet('/api/job-type-configurations?active_only=true', token);\r\n      if (response.success) {\r\n        setJobTypes(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching job types:', error);\r\n      setError('Gagal mengambil data jabatan');\r\n    }\r\n  };\r\n\r\n  const handleJabatanSelected = (jabatan: JobTypeConfig) => {\r\n    setSelectedJabatan(jabatan);\r\n    // Setelah jabatan dipilih, fetch pegawai yang sesuai dengan jabatan tersebut\r\n    fetchPegawaiByJabatan(jabatan.id);\r\n  };\r\n\r\n  const fetchPegawaiByJabatan = async (jabatanId: number) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null); // Clear previous errors\r\n      \r\n      // Gunakan endpoint yang sudah ada\r\n      const response = await apiGet('/api/pengajuan/pegawai-grouped', token);\r\n      if (response.success) {\r\n        // Filter pegawai berdasarkan jabatan yang dipilih\r\n        const filteredData: Record<string, PegawaiData[]> = {};\r\n        \r\n        Object.entries(response.data).forEach(([key, pegawaiList]) => {\r\n          const filteredPegawai = (pegawaiList as PegawaiData[]).filter(pegawai => {\r\n            // Filter berdasarkan jabatan yang dipilih\r\n            // Untuk sementara, kita akan menampilkan semua pegawai yang memiliki surat\r\n            // karena belum ada mapping yang jelas antara job type dan jabatan pegawai\r\n            return true; // Tampilkan semua pegawai yang memiliki surat\r\n          });\r\n          \r\n          if (filteredPegawai.length > 0) {\r\n            filteredData[key] = filteredPegawai;\r\n          }\r\n        });\r\n        \r\n        setPegawaiData(filteredData);\r\n        \r\n        // Jika tidak ada data, tampilkan pesan yang sesuai\r\n        if (Object.keys(filteredData).length === 0) {\r\n          setError('Tidak ada pegawai yang tersedia untuk jabatan ini');\r\n        }\r\n      } else {\r\n        setError(response.message || 'Gagal mengambil data pegawai');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching pegawai by jabatan:', error);\r\n      setError('Terjadi kesalahan saat mengambil data pegawai');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreatePengajuan = async () => {\r\n    if (!selectedPegawai || !selectedJabatan) return;\r\n\r\n    try {\r\n      setSubmitting(true);\r\n      const response = await apiPost('/api/pengajuan', { \r\n        pegawai_nip: selectedPegawai,\r\n        jabatan_id: selectedJabatan.id,\r\n        jenis_jabatan: selectedJabatan.jenis_jabatan\r\n      }, token);\r\n      if (response.success) {\r\n        // Redirect ke halaman upload file dengan data jabatan\r\n        navigate(`/pengajuan/${response.data.id}/upload`, {\r\n          state: { \r\n            jabatan: selectedJabatan,\r\n            requiredFiles: selectedJabatan.required_files \r\n          }\r\n        });\r\n      } else {\r\n        // Show error in modal instead of inline\r\n        setErrorMessage(response.message || 'Gagal membuat pengajuan');\r\n        setShowErrorModal(true);\r\n        setError(null); // Clear inline error\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating pengajuan:', error);\r\n      // Show error in modal instead of inline\r\n      setErrorMessage('Terjadi kesalahan saat membuat pengajuan');\r\n      setShowErrorModal(true);\r\n      setError(null); // Clear inline error\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Fungsi untuk mendapatkan semua pegawai yang ditampilkan\r\n  const getDisplayedPegawai = () => {\r\n    const allPegawai: PegawaiData[] = [];\r\n    Object.values(pegawaiData).forEach(group => {\r\n      allPegawai.push(...group);\r\n    });\r\n\r\n    if (!searchTerm) return allPegawai;\r\n\r\n    return allPegawai.filter(pegawai =>\r\n      pegawai.nama.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      pegawai.jabatan.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      pegawai.unit_kerja.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      pegawai.nip.includes(searchTerm)\r\n    );\r\n  };\r\n\r\n  // Fungsi untuk handle select all\r\n  const handleSelectAll = (checked: boolean) => {\r\n    if (checked) {\r\n      const displayedPegawai = getDisplayedPegawai();\r\n      if (displayedPegawai.length > 0) {\r\n        setSelectedPegawai(displayedPegawai[0].nip); // Hanya pilih yang pertama\r\n      }\r\n    } else {\r\n      setSelectedPegawai(null);\r\n    }\r\n  };\r\n\r\n  const filteredData = getDisplayedPegawai();\r\n\r\n  // Pagination logic\r\n  const totalItems = filteredData.length;\r\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = startIndex + itemsPerPage;\r\n  const currentData = filteredData.slice(startIndex, endIndex);\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n    setSelectedPegawai(null); // Reset selection when page changes\r\n  };\r\n\r\n  const handleSearch = (value: string) => {\r\n    setSearchTerm(value);\r\n    setCurrentPage(1); // Reset to first page when searching\r\n    setSelectedPegawai(null); // Reset selection when searching\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      {/* Header dengan button kembali */}\r\n      <div className=\"flex items-center gap-4 mb-6\">\r\n        <Button\r\n          variant=\"outline\"\r\n          onClick={() => navigate('/pengajuan')}\r\n          className=\"flex items-center gap-2\"\r\n        >\r\n          <ArrowLeft className=\"h-4 w-4\" />\r\n          Kembali ke Data Pengajuan\r\n        </Button>\r\n      </div>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Users className=\"h-5 w-5\" />\r\n            Pilih Pegawai untuk Pengajuan\r\n          </CardTitle>\r\n          <div className=\"text-sm text-gray-600\">\r\n            {selectedJabatan \r\n              ? `Pilih pegawai untuk pengajuan jabatan: ${selectedJabatan.jenis_jabatan}`\r\n              : 'Pilih jabatan terlebih dahulu, kemudian pilih pegawai yang akan diajukan'\r\n            }\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {error && (\r\n            <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n              <p className=\"text-red-600\">{error}</p>\r\n            </div>\r\n          )}\r\n\r\n                     {/* Jabatan Selection Cards */}\r\n           {!selectedJabatan && (\r\n             <div className=\"mb-6\">\r\n               <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">\r\n                 Pilih Jabatan untuk Pengajuan\r\n               </h3>\r\n               <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                 {jobTypes.map((job) => (\r\n                   <Card\r\n                     key={job.id}\r\n                     className=\"cursor-pointer transition-all duration-200 hover:shadow-md hover:border-green-300\"\r\n                     onClick={() => handleJabatanSelected(job)}\r\n                   >\r\n                     <CardHeader className=\"pb-3\">\r\n                       <div className=\"flex justify-between items-start\">\r\n                         <CardTitle className=\"text-lg font-semibold text-gray-800\">\r\n                           {job.jenis_jabatan}\r\n                         </CardTitle>\r\n                         <Badge \r\n                           variant=\"secondary\" \r\n                           className=\"bg-green-100 text-green-800 border-green-200\"\r\n                         >\r\n                           Aktif\r\n                         </Badge>\r\n                       </div>\r\n                     </CardHeader>\r\n                     <CardContent className=\"pt-0\">\r\n                       <div className=\"space-y-3\">\r\n                         <div className=\"flex justify-between items-center\">\r\n                           <span className=\"text-sm text-gray-600\">Total Dokumen:</span>\r\n                           <span className=\"font-semibold text-green-600\">{job.max_dokumen}</span>\r\n                         </div>\r\n                         <div className=\"flex justify-between items-center\">\r\n                           <span className=\"text-sm text-gray-600\">Min Dokumen:</span>\r\n                           <span className=\"text-sm text-gray-500\">{job.min_dokumen}</span>\r\n                         </div>\r\n                         <div className=\"flex justify-between items-center\">\r\n                           <span className=\"text-sm text-gray-600\">Jenis File:</span>\r\n                           <span className=\"text-sm text-gray-500\">{job.required_files.length} jenis</span>\r\n                         </div>\r\n                       </div>\r\n                     </CardContent>\r\n                   </Card>\r\n                 ))}\r\n               </div>\r\n               {jobTypes.length === 0 && (\r\n                 <div className=\"text-center py-8\">\r\n                   <Briefcase className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                   <p className=\"text-gray-500\">Tidak ada jabatan yang tersedia</p>\r\n                 </div>\r\n               )}\r\n             </div>\r\n           )}\r\n\r\n          {/* Selected Jabatan Info */}\r\n          {selectedJabatan && (\r\n            <div className=\"mb-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <h3 className=\"font-semibold text-green-800\">\r\n                    Jabatan: {selectedJabatan.jenis_jabatan}\r\n                  </h3>\r\n                  <p className=\"text-sm text-green-600\">\r\n                    {selectedJabatan.required_files.length} jenis dokumen diperlukan\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Badge className=\"bg-green-600 text-white\">\r\n                    {selectedJabatan.max_dokumen} dokumen\r\n                  </Badge>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => setSelectedJabatan(null)}\r\n                    className=\"border-green-600 text-green-600 hover:bg-green-50\"\r\n                  >\r\n                    Pilih Jabatan Lain\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Search Bar */}\r\n          <div className=\"mb-6\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n              <Input\r\n                placeholder=\"Cari pegawai berdasarkan nama, jabatan, unit kerja, atau NIP...\"\r\n                value={searchTerm}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n            {filteredData.length > 0 && (\r\n              <p className=\"text-sm text-gray-500 mt-2\">\r\n                Menampilkan {filteredData.length} pegawai (halaman {currentPage} dari {totalPages})\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* DataTable */}\r\n          <div className=\"border rounded-lg overflow-hidden\">\r\n            {!selectedJabatan ? null : loading ? (\r\n              <div className=\"flex items-center justify-center py-12\">\r\n                <Loader2 className=\"h-8 w-8 animate-spin mr-2 text-green-600\" />\r\n                <span>Memuat data pegawai...</span>\r\n              </div>\r\n            ) : error ? (\r\n              <div className=\"flex items-center justify-center py-12\">\r\n                <div className=\"text-center\">\r\n                  <AlertCircle className=\"h-12 w-12 text-red-400 mx-auto mb-4\" />\r\n                  <p className=\"text-red-600 mb-2\">{error}</p>\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    Pastikan sudah ada surat yang dibuat untuk pegawai di menu Template Generator\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead className=\"w-12\">\r\n                        <Checkbox\r\n                          checked={selectedPegawai !== null}\r\n                          onCheckedChange={handleSelectAll}\r\n                        />\r\n                      </TableHead>\r\n                      <TableHead>NIP</TableHead>\r\n                      <TableHead>Nama</TableHead>\r\n                      <TableHead>Jabatan</TableHead>\r\n                      <TableHead>Unit Kerja</TableHead>\r\n                      <TableHead>Induk Unit</TableHead>\r\n                      <TableHead className=\"text-center\">Total Surat</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {currentData.length === 0 ? (\r\n                      <TableRow>\r\n                        <TableCell colSpan={7} className=\"text-center py-8 text-gray-500\">\r\n                          {searchTerm ? (\r\n                            'Tidak ada pegawai yang sesuai dengan pencarian'\r\n                          ) : (\r\n                            <div>\r\n                              <p className=\"mb-2\">Tidak ada pegawai yang tersedia</p>\r\n                              <p className=\"text-sm text-gray-400\">\r\n                                Pastikan sudah ada surat yang dibuat untuk pegawai di menu Template Generator\r\n                              </p>\r\n                            </div>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ) : (\r\n                      currentData.map((pegawai) => (\r\n                        <TableRow key={pegawai.nip} className=\"hover:bg-gray-50\">\r\n                          <TableCell>\r\n                            <Checkbox\r\n                              checked={selectedPegawai === pegawai.nip}\r\n                              onCheckedChange={(checked) => {\r\n                                setSelectedPegawai(checked ? pegawai.nip : null);\r\n                              }}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell className=\"font-mono text-sm\">{pegawai.nip}</TableCell>\r\n                          <TableCell className=\"font-medium\">{pegawai.nama}</TableCell>\r\n                          <TableCell>{pegawai.jabatan}</TableCell>\r\n                          <TableCell>{pegawai.unit_kerja}</TableCell>\r\n                          <TableCell>{pegawai.induk_unit}</TableCell>\r\n                          <TableCell className=\"text-center\">\r\n                            <Badge variant=\"secondary\">\r\n                              {pegawai.total_surat} surat\r\n                            </Badge>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n\r\n                {/* Pagination */}\r\n                {totalPages > 1 && (\r\n                  <div className=\"flex items-center justify-between px-4 py-3 border-t bg-gray-50\">\r\n                    <div className=\"text-sm text-gray-700\">\r\n                      Menampilkan {startIndex + 1} sampai {Math.min(endIndex, totalItems)} dari {totalItems} pegawai\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Button\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={() => handlePageChange(currentPage - 1)}\r\n                        disabled={currentPage === 1}\r\n                      >\r\n                        <ChevronLeft className=\"h-4 w-4\" />\r\n                        Sebelumnya\r\n                      </Button>\r\n                      \r\n                      <div className=\"flex items-center gap-1\">\r\n                        {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n                          <Button\r\n                            key={page}\r\n                            variant={currentPage === page ? \"default\" : \"outline\"}\r\n                            size=\"sm\"\r\n                            onClick={() => handlePageChange(page)}\r\n                            className=\"w-8 h-8 p-0\"\r\n                          >\r\n                            {page}\r\n                          </Button>\r\n                        ))}\r\n                      </div>\r\n                      \r\n                      <Button\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={() => handlePageChange(currentPage + 1)}\r\n                        disabled={currentPage === totalPages}\r\n                      >\r\n                        Selanjutnya\r\n                        <ChevronRight className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          {/* Action Button */}\r\n          <div className=\"mt-6 flex justify-end\">\r\n            <Button\r\n              onClick={handleCreatePengajuan}\r\n              disabled={!selectedPegawai || !selectedJabatan || submitting}\r\n              size=\"lg\"\r\n              className=\"bg-green-600 hover:bg-green-700 text-white\"\r\n            >\r\n              {submitting ? (\r\n                <>\r\n                  <Loader2 className=\"h-4 w-4 mr-2 animate-spin text-green-600\" />\r\n                  Membuat Pengajuan...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Send className=\"h-4 w-4 mr-2\" />\r\n                  Proses Pengajuan\r\n                </>\r\n              )}\r\n            </Button>\r\n          </div>\r\n\r\n          {!selectedPegawai && selectedJabatan && filteredData.length > 0 && (\r\n            <p className=\"text-sm text-gray-500 mt-2 text-center\">\r\n              Pilih satu pegawai untuk melanjutkan proses pengajuan\r\n            </p>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Error Modal */}\r\n      <ErrorModal\r\n        isOpen={showErrorModal}\r\n        onClose={() => setShowErrorModal(false)}\r\n        title=\"Gagal Membuat Pengajuan\"\r\n        message={errorMessage}\r\n        showRetry={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PengajuanSelect; "],"names":["ErrorModal","isOpen","onClose","title","message","showRetry","onRetry","jsx","Dialog","jsxs","DialogContent","DialogHeader","DialogTitle","AlertCircle","Button","PengajuanSelect","navigate","useNavigate","user","token","isAuthenticated","useAuth","pegawaiData","setPegawaiData","useState","selectedPegawai","setSelectedPegawai","searchTerm","setSearchTerm","loading","setLoading","error","setError","submitting","setSubmitting","showErrorModal","setShowErrorModal","errorMessage","setErrorMessage","currentPage","setCurrentPage","itemsPerPage","jobTypes","setJobTypes","selectedJabatan","setSelectedJabatan","useEffect","fetchJobTypes","response","apiGet","handleJabatanSelected","jabatan","fetchPegawaiByJabatan","jabatanId","filteredData","key","pegawaiList","filteredPegawai","pegawai","handleCreatePengajuan","apiPost","getDisplayedPegawai","allPegawai","group","handleSelectAll","checked","displayedPegawai","totalItems","totalPages","startIndex","endIndex","currentData","handlePageChange","page","handleSearch","value","ArrowLeft","Card","CardHeader","CardTitle","Users","CardContent","job","Badge","Briefcase","Search","Input","e","Loader2","Fragment","Table","TableHeader","TableRow","TableHead","Checkbox","TableBody","TableCell","ChevronLeft","_","i","ChevronRight","Send"],"mappings":"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"}